Script started on Mon 06 Jul 2020 03:34:05 PM CDT
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/apForFun[00m$ make TARGET=seq
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/clang -O1 -std=c++14 -Wall -fPIC -I./include -DDEVICE=CPU_TARGET -g -I./libspatialaudio/build/Debug/include -emit-llvm -S -o build/seq/main.ll src//main.cpp
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then5
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end10
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc9
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body45
	discovered a new reachable node %invoke.cont66
	discovered a new reachable node %for.cond.cleanup44
	discovered a new reachable node %lpad65
	discovered a new reachable node %ehcleanup103
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad14
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %invoke.cont9
	discovered a new reachable node %lpad7
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup10
	discovered a new reachable node %lpad3
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.end19
	discovered a new reachable node %for.body24
	discovered a new reachable node %delete.end31
	discovered a new reachable node %for.inc39
	discovered a new reachable node %for.cond.cleanup23
	discovered a new reachable node %delete.end45
	discovered a new reachable node %delete.end49
	discovered a new reachable node %delete.notnull48
	discovered a new reachable node %delete.notnull44
	discovered a new reachable node %delete.notnull35
	discovered a new reachable node %delete.notnull28
	discovered a new reachable node %delete.notnull18
	discovered a new reachable node %delete.notnull14
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont7
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad6
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %lpad9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %invoke.cont30
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %lpad31
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc16
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull13
	discovered a new reachable node %delete.notnull10
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.then
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %arrayctor.cont
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.cond10.preheader
	discovered a new reachable node %for.cond.cleanup12
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body13
	discovered a new reachable node %for.body21
	discovered a new reachable node %for.cond.cleanup20
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %new.ctorloop
	discovered a new reachable node %arrayctor.loop
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end11
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont13
	discovered a new reachable node %invoke.cont16
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %lpad17
	discovered a new reachable node %ehcleanup20
	discovered a new reachable node %ehcleanup21
	discovered a new reachable node %lpad15
	discovered a new reachable node %lpad12
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then6
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %lpad
	discovered a new reachable node %invoke.cont23
	discovered a new reachable node %invoke.cont24
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad22
	discovered a new reachable node %invoke.cont25
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.then4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end76
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad71
	discovered a new reachable node %invoke.cont78
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else73
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont17
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad13
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then5
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end10
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc9
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body45
	discovered a new reachable node %invoke.cont66
	discovered a new reachable node %for.cond.cleanup44
	discovered a new reachable node %lpad65
	discovered a new reachable node %ehcleanup103
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad14
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %invoke.cont9
	discovered a new reachable node %lpad7
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup10
	discovered a new reachable node %lpad3
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %delete.end19
	discovered a new reachable node %for.body24
	discovered a new reachable node %delete.end31
	discovered a new reachable node %for.inc39
	discovered a new reachable node %for.cond.cleanup23
	discovered a new reachable node %delete.end45
	discovered a new reachable node %delete.end49
	discovered a new reachable node %delete.notnull48
	discovered a new reachable node %delete.notnull44
	discovered a new reachable node %delete.notnull35
	discovered a new reachable node %delete.notnull28
	discovered a new reachable node %delete.notnull18
	discovered a new reachable node %delete.notnull14
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont7
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad6
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %lpad9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %invoke.cont30
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %lpad31
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc16
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull13
	discovered a new reachable node %delete.notnull10
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.then
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond1.preheader.lr.ph
	discovered a new reachable node %for.cond1.preheader
	discovered a new reachable node %for.body4.lr.ph
	discovered a new reachable node %for.body4
	discovered a new reachable node %for.cond.cleanup3
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %arrayctor.cont
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.cond10.preheader
	discovered a new reachable node %for.cond.cleanup12
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body13
	discovered a new reachable node %for.body21
	discovered a new reachable node %for.cond.cleanup20
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %new.ctorloop
	discovered a new reachable node %arrayctor.loop
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end11
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont13
	discovered a new reachable node %invoke.cont16
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %lpad17
	discovered a new reachable node %ehcleanup20
	discovered a new reachable node %ehcleanup21
	discovered a new reachable node %lpad15
	discovered a new reachable node %lpad12
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then6
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %lpad
	discovered a new reachable node %invoke.cont23
	discovered a new reachable node %invoke.cont24
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad22
	discovered a new reachable node %invoke.cont25
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.then4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end76
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad71
	discovered a new reachable node %invoke.cont78
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else73
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont17
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad13
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry

GENHPVM PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end19
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else12
	discovered a new reachable node %return
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Locate __hpvm__init()
Initialize Timer Set
Inserting GV: i8**@hpvmTimerSet_GenHPVM = common global i8* null
TimerSetAddress =   %9 = call i8* @llvm_hpvm_initializeTimerSet()
Store Timer Address in Global variable:   store i8* %9, i8** @hpvmTimerSet_GenHPVM
Locate __hpvm__cleanup()
-------- Searching for launch sites ----------
Function: __cxx_global_var_init
Erase 0 Statements:
Function: _ZNSt8ios_base4InitC1Ev
Erase 0 Statements:
Function: _ZNSt8ios_base4InitD1Ev
Erase 0 Statements:
Function: __cxa_atexit
Erase 0 Statements:
Function: _ZN14CAmbisonicBaseC2Ev
Erase 0 Statements:
Function: llvm.dbg.declare
Erase 0 Statements:
Function: _ZN14CAmbisonicBase8GetOrderEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9GetHeightEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Erase 0 Statements:
Function: _Z17OrderToComponentsjb
Erase 0 Statements:
Function: _ZN8CBFormatC2Ev
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEEC2Ev
Erase 0 Statements:
Function: _ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EEC2Ev
Erase 0 Statements:
Function: _ZN8CBFormat14GetSampleCountEv
Erase 0 Statements:
Function: _ZN8CBFormat9ConfigureEjbj
Erase 0 Statements:
Function: llvm.lifetime.start.p0i8
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE6resizeEm
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE4dataEv
Erase 0 Statements:
Function: llvm.memset.p0i8.i64
Erase 0 Statements:
Function: _ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_
Erase 0 Statements:
Function: _Znam
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEEixEm
Erase 0 Statements:
Function: _ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm
Erase 0 Statements:
Function: llvm.lifetime.end.p0i8
Erase 0 Statements:
Function: _ZN8CBFormat5ResetEv
Erase 0 Statements:
Function: _ZN8CBFormat7RefreshEv
Erase 0 Statements:
Function: _ZN8CBFormat12InsertStreamEPfjj
Erase 0 Statements:
Function: llvm.memcpy.p0i8.p0i8.i64
Erase 0 Statements:
Function: _ZN8CBFormat13ExtractStreamEPfjj
Erase 0 Statements:
Function: _ZN8CBFormataSERKS_
Erase 0 Statements:
Function: _ZNKSt6vectorIfSaIfEE4dataEv
Erase 0 Statements:
Function: _ZN8CBFormateqERKS_
Erase 0 Statements:
Function: _ZN8CBFormatneERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmIERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatdVERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKf
Erase 0 Statements:
Function: _ZN8CBFormatmIERKf
Erase 0 Statements:
Function: _ZN8CBFormatmLERKf
Erase 0 Statements:
Function: _ZN8CBFormatdVERKf
Erase 0 Statements:
Function: _ZN16CAmbisonicSourceC2Ev
Erase 0 Statements:
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE6resizeEmRKf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource5ResetEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7RefreshEv
Erase 0 Statements:
Function: cosf
Erase 0 Statements:
Function: sinf
Erase 0 Statements:
Function: powf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11GetPositionEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7SetGainEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7GetGainEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderC2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD0Ev
Erase 0 Statements:
Function: _ZdlPv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7RefreshEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistC2Ev
Erase 0 Statements:
Function: __gxx_personality_v0
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD2Ev
Erase 0 Statements:
Function: _ZdaPv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD0Ev
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Erase 0 Statements:
Function: _Znwm
Erase 0 Statements:
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZNSi4readEPcl
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound13readInBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound20justReadInForBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound16processToBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9getSampleEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound10getBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Erase 0 Statements:
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv
Erase 0 Statements:
Function: __clang_call_terminate
Erase 0 Statements:
Function: __cxa_begin_catch
Erase 0 Statements:
Function: _ZSt9terminatev
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Erase 0 Statements:
Function: _ZStorSt13_Ios_OpenmodeS_
Erase 0 Statements:
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Erase 0 Statements:
Function: free
Erase 0 Statements:
Function: _ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Erase 0 Statements:
Function: _ZNSaIcEC2Ev
Erase 0 Statements:
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
Erase 0 Statements:
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
Erase 0 Statements:
Function: _ZNSaIcED2Ev
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio12processBlockEv
Erase 0 Statements:
Function: _ZN8CBFormatD2Ev
Erase 0 Statements:
Function: _Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji
Set preferred target for _Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #23, !dbg !3044
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji(%"class.std::vector.6"* %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #7 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %"class.std::vector.6"* %soundSrcs, metadata !4977, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4978, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4979, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4980, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %numBlocks, metadata !4981, metadata !DIExpression()), !dbg !4988
  tail call void @__hpvm__hint(i32 1) #23, !dbg !4989
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cmp32 = icmp eq i32 %soundSrcsSize, 0, !dbg !4992
  br i1 %cmp32, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !dbg !4993

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp230 = icmp sgt i32 %numBlocks, 0, !dbg !4994
  %wide.trip.count37 = zext i32 %soundSrcsSize to i64, !dbg !4992
  %wide.trip.count = zext i32 %numBlocks to i64, !dbg !4994
  br label %for.cond1.preheader, !dbg !4993

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %indvars.iv35 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next36, %for.cond.cleanup3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !4982, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4996
  br i1 %cmp230, label %for.body4, label %for.cond.cleanup3, !dbg !4997

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !4998
  ret void, !dbg !4999

for.cond.cleanup3:                                ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  %exitcond38 = icmp eq i64 %indvars.iv.next36, %wide.trip.count37, !dbg !4992
  br i1 %exitcond38, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !4993, !llvm.loop !5001

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.cond1.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4984, metadata !DIExpression()), !dbg !4996
  %call = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5003
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8, !dbg !5003, !tbaa !3164
  %BEncoderArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 8, !dbg !5005
  %1 = load %class.CAmbisonicEncoderDist**, %class.CAmbisonicEncoderDist*** %BEncoderArray, align 8, !dbg !5005, !tbaa !4360
  %arrayidx = getelementptr inbounds %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %1, i64 %indvars.iv, !dbg !5003
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %arrayidx, align 8, !dbg !5003, !tbaa !3164
  %call6 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5006
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call6, align 8, !dbg !5006, !tbaa !3164
  %sampleArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 6, !dbg !5007
  %4 = load float**, float*** %sampleArray, align 8, !dbg !5007, !tbaa !4350
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv, !dbg !5006
  %5 = load float*, float** %arrayidx8, align 8, !dbg !5006, !tbaa !3164
  %call10 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5008
  %6 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call10, align 8, !dbg !5008, !tbaa !3164
  %BFormatArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %6, i64 0, i32 7, !dbg !5009
  %7 = load %class.CBFormat**, %class.CBFormat*** %BFormatArray, align 8, !dbg !5009, !tbaa !4356
  %arrayidx12 = getelementptr inbounds %class.CBFormat*, %class.CBFormat** %7, i64 %indvars.iv, !dbg !5008
  %8 = load %class.CBFormat*, %class.CBFormat** %arrayidx12, align 8, !dbg !5008, !tbaa !3164
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* %5, i32 %nSamples, %class.CBFormat* %8), !dbg !5010
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4996
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !5012
  br i1 %exitcond, label %for.cond.cleanup3, label %for.body4, !dbg !4997, !llvm.loop !5013
}

	Num of in pointers = 1
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #7 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %"class.std::vector.6"* %soundSrcs, metadata !4977, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4978, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4979, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4980, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %numBlocks, metadata !4981, metadata !DIExpression()), !dbg !4988
  tail call void @__hpvm__hint(i32 1) #23, !dbg !4989
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cmp32 = icmp eq i32 %soundSrcsSize, 0, !dbg !4992
  br i1 %cmp32, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !dbg !4993

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp230 = icmp sgt i32 %numBlocks, 0, !dbg !4994
  %wide.trip.count37 = zext i32 %soundSrcsSize to i64, !dbg !4992
  %wide.trip.count = zext i32 %numBlocks to i64, !dbg !4994
  br label %for.cond1.preheader, !dbg !4993

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %indvars.iv35 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next36, %for.cond.cleanup3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !4982, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4996
  br i1 %cmp230, label %for.body4, label %for.cond.cleanup3, !dbg !4997

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !4998
  ret void, !dbg !4999

for.cond.cleanup3:                                ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  %exitcond38 = icmp eq i64 %indvars.iv.next36, %wide.trip.count37, !dbg !4992
  br i1 %exitcond38, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !4993, !llvm.loop !5001

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.cond1.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4984, metadata !DIExpression()), !dbg !4996
  %call = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5003
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8, !dbg !5003, !tbaa !3164
  %BEncoderArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 8, !dbg !5005
  %1 = load %class.CAmbisonicEncoderDist**, %class.CAmbisonicEncoderDist*** %BEncoderArray, align 8, !dbg !5005, !tbaa !4360
  %arrayidx = getelementptr inbounds %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %1, i64 %indvars.iv, !dbg !5003
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %arrayidx, align 8, !dbg !5003, !tbaa !3164
  %call6 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5006
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call6, align 8, !dbg !5006, !tbaa !3164
  %sampleArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 6, !dbg !5007
  %4 = load float**, float*** %sampleArray, align 8, !dbg !5007, !tbaa !4350
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv, !dbg !5006
  %5 = load float*, float** %arrayidx8, align 8, !dbg !5006, !tbaa !3164
  %call10 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5008
  %6 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call10, align 8, !dbg !5008, !tbaa !3164
  %BFormatArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %6, i64 0, i32 7, !dbg !5009
  %7 = load %class.CBFormat**, %class.CBFormat*** %BFormatArray, align 8, !dbg !5009, !tbaa !4356
  %arrayidx12 = getelementptr inbounds %class.CBFormat*, %class.CBFormat** %7, i64 %indvars.iv, !dbg !5008
  %8 = load %class.CBFormat*, %class.CBFormat** %arrayidx12, align 8, !dbg !5008, !tbaa !3164
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* %5, i32 %nSamples, %class.CBFormat* %8), !dbg !5010
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4996
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !5012
  br i1 %exitcond, label %for.cond.cleanup3, label %for.body4, !dbg !4997, !llvm.loop !5013
}

Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #7 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %"class.std::vector.6"* %soundSrcs, metadata !4977, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4978, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4979, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4980, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %numBlocks, metadata !4981, metadata !DIExpression()), !dbg !4988
  tail call void @__hpvm__hint(i32 1) #23, !dbg !4989
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cmp32 = icmp eq i32 %soundSrcsSize, 0, !dbg !4992
  br i1 %cmp32, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !dbg !4993

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp230 = icmp sgt i32 %numBlocks, 0, !dbg !4994
  %wide.trip.count37 = zext i32 %soundSrcsSize to i64, !dbg !4992
  %wide.trip.count = zext i32 %numBlocks to i64, !dbg !4994
  br label %for.cond1.preheader, !dbg !4993

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %indvars.iv35 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next36, %for.cond.cleanup3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !4982, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4996
  br i1 %cmp230, label %for.body4, label %for.cond.cleanup3, !dbg !4997

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !4998
  ret void, !dbg !4999

for.cond.cleanup3:                                ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  %exitcond38 = icmp eq i64 %indvars.iv.next36, %wide.trip.count37, !dbg !4992
  br i1 %exitcond38, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !4993, !llvm.loop !5001

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.cond1.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4984, metadata !DIExpression()), !dbg !4996
  %call = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5003
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8, !dbg !5003, !tbaa !3164
  %BEncoderArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 8, !dbg !5005
  %1 = load %class.CAmbisonicEncoderDist**, %class.CAmbisonicEncoderDist*** %BEncoderArray, align 8, !dbg !5005, !tbaa !4360
  %arrayidx = getelementptr inbounds %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %1, i64 %indvars.iv, !dbg !5003
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %arrayidx, align 8, !dbg !5003, !tbaa !3164
  %call6 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5006
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call6, align 8, !dbg !5006, !tbaa !3164
  %sampleArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 6, !dbg !5007
  %4 = load float**, float*** %sampleArray, align 8, !dbg !5007, !tbaa !4350
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv, !dbg !5006
  %5 = load float*, float** %arrayidx8, align 8, !dbg !5006, !tbaa !3164
  %call10 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5008
  %6 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call10, align 8, !dbg !5008, !tbaa !3164
  %BFormatArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %6, i64 0, i32 7, !dbg !5009
  %7 = load %class.CBFormat**, %class.CBFormat*** %BFormatArray, align 8, !dbg !5009, !tbaa !4356
  %arrayidx12 = getelementptr inbounds %class.CBFormat*, %class.CBFormat** %7, i64 %indvars.iv, !dbg !5008
  %8 = load %class.CBFormat*, %class.CBFormat** %arrayidx12, align 8, !dbg !5008, !tbaa !3164
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* %5, i32 %nSamples, %class.CBFormat* %8), !dbg !5010
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4996
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !5012
  br i1 %exitcond, label %for.cond.cleanup3, label %for.body4, !dbg !4997, !llvm.loop !5013
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji undef, i64 %bytes_soundSrcs, 0
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji undef, i64 %bytes_soundSrcs, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !3053
Found return statement of BB:   ret void, !dbg !3054
	Substitute return with:   ret %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #7 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %"class.std::vector.6"* %soundSrcs, metadata !4977, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4978, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4979, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4980, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %numBlocks, metadata !4981, metadata !DIExpression()), !dbg !4988
  tail call void @__hpvm__hint(i32 1) #23, !dbg !4989
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !4990
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4991
  %cmp32 = icmp eq i32 %soundSrcsSize, 0, !dbg !4992
  br i1 %cmp32, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !dbg !4993

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp230 = icmp sgt i32 %numBlocks, 0, !dbg !4994
  %wide.trip.count37 = zext i32 %soundSrcsSize to i64, !dbg !4992
  %wide.trip.count = zext i32 %numBlocks to i64, !dbg !4994
  br label %for.cond1.preheader, !dbg !4993

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %indvars.iv35 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next36, %for.cond.cleanup3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !4982, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4996
  br i1 %cmp230, label %for.body4, label %for.cond.cleanup3, !dbg !4997

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji undef, i64 %bytes_soundSrcs, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !4998
  ret %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji %returnStruct, !dbg !4999

for.cond.cleanup3:                                ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4991
  %exitcond38 = icmp eq i64 %indvars.iv.next36, %wide.trip.count37, !dbg !4992
  br i1 %exitcond38, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !4993, !llvm.loop !5001

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.cond1.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4984, metadata !DIExpression()), !dbg !4996
  %call = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5003
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8, !dbg !5003, !tbaa !3164
  %BEncoderArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 8, !dbg !5005
  %1 = load %class.CAmbisonicEncoderDist**, %class.CAmbisonicEncoderDist*** %BEncoderArray, align 8, !dbg !5005, !tbaa !4360
  %arrayidx = getelementptr inbounds %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %1, i64 %indvars.iv, !dbg !5003
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %arrayidx, align 8, !dbg !5003, !tbaa !3164
  %call6 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5006
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call6, align 8, !dbg !5006, !tbaa !3164
  %sampleArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 6, !dbg !5007
  %4 = load float**, float*** %sampleArray, align 8, !dbg !5007, !tbaa !4350
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv, !dbg !5006
  %5 = load float*, float** %arrayidx8, align 8, !dbg !5006, !tbaa !3164
  %call10 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5008
  %6 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call10, align 8, !dbg !5008, !tbaa !3164
  %BFormatArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %6, i64 0, i32 7, !dbg !5009
  %7 = load %class.CBFormat**, %class.CBFormat*** %BFormatArray, align 8, !dbg !5009, !tbaa !4356
  %arrayidx12 = getelementptr inbounds %class.CBFormat*, %class.CBFormat** %7, i64 %indvars.iv, !dbg !5008
  %8 = load %class.CBFormat*, %class.CBFormat** %arrayidx12, align 8, !dbg !5008, !tbaa !3164
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* %5, i32 %nSamples, %class.CBFormat* %8), !dbg !5010
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5011
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4996
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !5012
  br i1 %exitcond, label %for.cond.cleanup3, label %for.body4, !dbg !4997, !llvm.loop !5013
}

Erase 3 Statements:
  tail call void @__hpvm__hint(i32 1) #23, !dbg !3044
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !3045
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !3053
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23, !dbg !3053
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23, !dbg !3045
	Erasing   tail call void @__hpvm__hint(i32 1) #23, !dbg !3044
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #7 !dbg !4972 {
entry:
  call void @llvm.dbg.value(metadata %"class.std::vector.6"* %soundSrcs, metadata !4977, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4978, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4979, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4980, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 %numBlocks, metadata !4981, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.value(metadata i32 0, metadata !4982, metadata !DIExpression()), !dbg !4989
  %cmp32 = icmp eq i32 %soundSrcsSize, 0, !dbg !4990
  br i1 %cmp32, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !dbg !4991

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp230 = icmp sgt i32 %numBlocks, 0, !dbg !4992
  %wide.trip.count37 = zext i32 %soundSrcsSize to i64, !dbg !4990
  %wide.trip.count = zext i32 %numBlocks to i64, !dbg !4992
  br label %for.cond1.preheader, !dbg !4991

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %indvars.iv35 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next36, %for.cond.cleanup3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv35, metadata !4982, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.value(metadata i32 0, metadata !4984, metadata !DIExpression()), !dbg !4994
  br i1 %cmp230, label %for.body4, label %for.cond.cleanup3, !dbg !4995

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji undef, i64 %bytes_soundSrcs, 0
  ret %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji %returnStruct, !dbg !4996

for.cond.cleanup3:                                ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1, !dbg !4997
  call void @llvm.dbg.value(metadata i32 undef, metadata !4982, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4989
  %exitcond38 = icmp eq i64 %indvars.iv.next36, %wide.trip.count37, !dbg !4990
  br i1 %exitcond38, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !4991, !llvm.loop !4998

for.body4:                                        ; preds = %for.body4, %for.cond1.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ 0, %for.cond1.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4984, metadata !DIExpression()), !dbg !4994
  %call = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5000
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call, align 8, !dbg !5000, !tbaa !3164
  %BEncoderArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 8, !dbg !5002
  %1 = load %class.CAmbisonicEncoderDist**, %class.CAmbisonicEncoderDist*** %BEncoderArray, align 8, !dbg !5002, !tbaa !4360
  %arrayidx = getelementptr inbounds %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %1, i64 %indvars.iv, !dbg !5000
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %arrayidx, align 8, !dbg !5000, !tbaa !3164
  %call6 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5003
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call6, align 8, !dbg !5003, !tbaa !3164
  %sampleArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 6, !dbg !5004
  %4 = load float**, float*** %sampleArray, align 8, !dbg !5004, !tbaa !4350
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv, !dbg !5003
  %5 = load float*, float** %arrayidx8, align 8, !dbg !5003, !tbaa !3164
  %call10 = tail call dereferenceable(8) %"class.ILLIXR_AUDIO::Sound"** @_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm(%"class.std::vector.6"* %soundSrcs, i64 %indvars.iv35) #23, !dbg !5005
  %6 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %call10, align 8, !dbg !5005, !tbaa !3164
  %BFormatArray = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %6, i64 0, i32 7, !dbg !5006
  %7 = load %class.CBFormat**, %class.CBFormat*** %BFormatArray, align 8, !dbg !5006, !tbaa !4356
  %arrayidx12 = getelementptr inbounds %class.CBFormat*, %class.CBFormat** %7, i64 %indvars.iv, !dbg !5005
  %8 = load %class.CBFormat*, %class.CBFormat** %arrayidx12, align 8, !dbg !5005, !tbaa !3164
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* %5, i32 %nSamples, %class.CBFormat* %8), !dbg !5007
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4994
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !5009
  br i1 %exitcond, label %for.cond.cleanup3, label %for.body4, !dbg !4995, !llvm.loop !5010
}

Return type value: %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji = type <{ i64 }>
Cloning Function: _Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji
Old Function Type: void (%"class.std::vector.6"*, i64, i32, i32, i32)
New Function Type: %struct.out._Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji (%"class.std::vector.6"*, i64, i32, i32, i32)
Old Function name: _Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji
New Function name: _Z11encoder_fxpPSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEmjji_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.std::vector.6"* %soundSrcs : %"class.std::vector.6"* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i32 %nSamples : i32 %0
3. i32 %soundSrcsSize : i32 %0
4. i32 %numBlocks : i32 %0
opt: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Transforms/Utils/CloneFunction.cpp:130: void llvm::CloneFunctionInto(llvm::Function*, const llvm::Function*, llvm::ValueToValueMapTy&, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>&, const char*, llvm::ClonedCodeInfo*, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*): Assertion `!MustCloneSP || ModuleLevelChanges' failed.
Stack dump:
0.	Program arguments: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
1.	Running pass 'Pass to generate HPVM IR from LLVM IR (with dummy function calls)' on module 'build/seq/main.ll'.
 #0 0x0000000003067291 llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:533:0
 #1 0x0000000003067324 PrintStackTraceSignalHandler(void*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:594:0
 #2 0x00000000030651f8 llvm::sys::RunSignalHandlers() /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Signals.cpp:68:0
 #3 0x0000000003066c46 SignalHandler(int) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:385:0
 #4 0x00007ffa1c9b5390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)
 #5 0x00007ffa1b727428 raise /build/glibc-LK5gWL/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0
 #6 0x00007ffa1b72902a abort /build/glibc-LK5gWL/glibc-2.23/stdlib/abort.c:91:0
 #7 0x00007ffa1b71fbd7 __assert_fail_base /build/glibc-LK5gWL/glibc-2.23/assert/assert.c:92:0
 #8 0x00007ffa1b71fc82 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc82)
 #9 0x00000000030ac659 llvm::CloneFunctionInto(llvm::Function*, llvm::Function const*, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>&, char const*, llvm::ClonedCodeInfo*, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Transforms/Utils/CloneFunction.cpp:133:0
#10 0x00007ffa1b4c4118 hpvmUtils::cloneFunction(llvm::Function*, llvm::FunctionType*, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>*, std::vector<llvm::Argument*, std::allocator<llvm::Argument*> >*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/HPVMUtils.h:307:0
#11 0x00007ffa1b4cb134 genhpvm::GenHPVM::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/GenHPVM/GenHPVM.cpp:758:0
#12 0x000000000276b70b (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1750:0
#13 0x000000000276bead llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1863:0
#14 0x000000000276c0b3 llvm::legacy::PassManager::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1895:0
#15 0x000000000183dba7 main /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/opt/opt.cpp:892:0
#16 0x00007ffa1b712830 __libc_start_main /build/glibc-LK5gWL/glibc-2.23/csu/../csu/libc-start.c:325:0
#17 0x00000000017ffb89 _start (/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt+0x17ffb89)
Makefile:126: recipe for target 'build/seq/main.hpvm.ll' failed
make: *** [build/seq/main.hpvm.ll] Aborted
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/apForFun[00m$ exit
exit

Script done on Mon 06 Jul 2020 03:34:29 PM CDT
