/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then5
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end10
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc9
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %invoke.cont9
	discovered a new reachable node %lpad7
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup10
	discovered a new reachable node %lpad3
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont7
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad6
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %lpad9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %invoke.cont30
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %lpad31
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc16
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull13
	discovered a new reachable node %delete.notnull10
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.then
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end13
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %lpad20
	discovered a new reachable node %ehcleanup23
	discovered a new reachable node %ehcleanup24
	discovered a new reachable node %lpad17
	discovered a new reachable node %lpad14
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then8
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %lpad
	discovered a new reachable node %invoke.cont23
	discovered a new reachable node %invoke.cont24
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad22
	discovered a new reachable node %invoke.cont25
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.then4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end76
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad71
	discovered a new reachable node %invoke.cont78
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else73
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont17
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad13
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then5
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc10
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc5
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end10
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader
	discovered a new reachable node %for.inc9
	discovered a new reachable node %for.body4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.body20
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %invoke.cont9
	discovered a new reachable node %lpad7
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup10
	discovered a new reachable node %lpad3
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont7
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad6
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %ehcleanup9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %invoke.cont10
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %lpad9
	discovered a new reachable node %lpad2
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %invoke.cont30
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %lpad31
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup8
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond6.preheader
	discovered a new reachable node %for.body9.preheader
	discovered a new reachable node %for.body9
	discovered a new reachable node %if.then
	discovered a new reachable node %for.inc16
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %for.body
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %if.end
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull13
	discovered a new reachable node %delete.notnull10
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.then
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end13
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %lpad20
	discovered a new reachable node %ehcleanup23
	discovered a new reachable node %ehcleanup24
	discovered a new reachable node %lpad17
	discovered a new reachable node %lpad14
	discovered a new reachable node %ehcleanup
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then8
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %lpad
	discovered a new reachable node %invoke.cont23
	discovered a new reachable node %invoke.cont24
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad22
	discovered a new reachable node %invoke.cont25
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.then4
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end76
	discovered a new reachable node %invoke.cont77
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad71
	discovered a new reachable node %invoke.cont78
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else73
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont8
	discovered a new reachable node %lpad
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %invoke.cont17
	discovered a new reachable node %unreachable
	discovered a new reachable node %lpad13
	discovered a new reachable node %invoke.cont18
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry

GENHPVM PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end19
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else12
	discovered a new reachable node %return
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Locate __hpvm__init()
Initialize Timer Set
Inserting GV: i8**@hpvmTimerSet_GenHPVM = common global i8* null
TimerSetAddress =   %1 = call i8* @llvm_hpvm_initializeTimerSet()
Store Timer Address in Global variable:   store i8* %1, i8** @hpvmTimerSet_GenHPVM
Locate __hpvm__cleanup()
-------- Searching for launch sites ----------
Function: __cxx_global_var_init
Erase 0 Statements:
Function: _ZNSt8ios_base4InitC1Ev
Erase 0 Statements:
Function: _ZNSt8ios_base4InitD1Ev
Erase 0 Statements:
Function: __cxa_atexit
Erase 0 Statements:
Function: _ZN14CAmbisonicBaseC2Ev
Erase 0 Statements:
Function: llvm.dbg.declare
Erase 0 Statements:
Function: _ZN14CAmbisonicBase8GetOrderEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9GetHeightEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Erase 0 Statements:
Function: _Z17OrderToComponentsjb
Erase 0 Statements:
Function: _ZN8CBFormatC2Ev
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEEC2Ev
Erase 0 Statements:
Function: _ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EEC2Ev
Erase 0 Statements:
Function: _ZN8CBFormat14GetSampleCountEv
Erase 0 Statements:
Function: _ZN8CBFormat9ConfigureEjbj
Erase 0 Statements:
Function: llvm.lifetime.start.p0i8
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE6resizeEm
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE4dataEv
Erase 0 Statements:
Function: llvm.memset.p0i8.i64
Erase 0 Statements:
Function: _ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_
Erase 0 Statements:
Function: _Znam
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEEixEm
Erase 0 Statements:
Function: _ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm
Erase 0 Statements:
Function: llvm.lifetime.end.p0i8
Erase 0 Statements:
Function: _ZN8CBFormat5ResetEv
Erase 0 Statements:
Function: _ZN8CBFormat7RefreshEv
Erase 0 Statements:
Function: _ZN8CBFormat12InsertStreamEPfjj
Erase 0 Statements:
Function: llvm.memcpy.p0i8.p0i8.i64
Erase 0 Statements:
Function: _ZN8CBFormat13ExtractStreamEPfjj
Erase 0 Statements:
Function: _ZN8CBFormataSERKS_
Erase 0 Statements:
Function: _ZNKSt6vectorIfSaIfEE4dataEv
Erase 0 Statements:
Function: _ZN8CBFormateqERKS_
Erase 0 Statements:
Function: _ZN8CBFormatneERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmIERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatdVERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKf
Erase 0 Statements:
Function: _ZN8CBFormatmIERKf
Erase 0 Statements:
Function: _ZN8CBFormatmLERKf
Erase 0 Statements:
Function: _ZN8CBFormatdVERKf
Erase 0 Statements:
Function: _ZN16CAmbisonicSourceC2Ev
Erase 0 Statements:
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE6resizeEmRKf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource5ResetEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7RefreshEv
Erase 0 Statements:
Function: cosf
Erase 0 Statements:
Function: sinf
Erase 0 Statements:
Function: powf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11GetPositionEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7SetGainEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7GetGainEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderC2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD0Ev
Erase 0 Statements:
Function: _ZdlPv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7RefreshEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistC2Ev
Erase 0 Statements:
Function: __gxx_personality_v0
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD2Ev
Erase 0 Statements:
Function: _ZdaPv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD0Ev
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Erase 0 Statements:
Function: _Znwm
Erase 0 Statements:
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZNSi4readEPcl
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound13readInBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound20justReadInForBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound16processToBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9getSampleEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound10getBFormatEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Erase 0 Statements:
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv
Erase 0 Statements:
Function: __clang_call_terminate
Erase 0 Statements:
Function: __cxa_begin_catch
Erase 0 Statements:
Function: _ZSt9terminatev
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Erase 0 Statements:
Function: _ZStorSt13_Ios_OpenmodeS_
Erase 0 Statements:
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEC2Ev
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Erase 0 Statements:
Function: free
Erase 0 Statements:
Function: _ZNKSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE4sizeEv
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EEixEm
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Erase 0 Statements:
Function: _ZNSaIcEC2Ev
Erase 0 Statements:
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_
Erase 0 Statements:
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
Erase 0 Statements:
Function: _ZNSaIcED2Ev
Erase 0 Statements:
Function: _ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj
Set preferred target for _ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #24, !dbg !3051
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readnone %this, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize) #7 align 2 !dbg !4854 {
entry:
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::ABAudio"* undef, metadata !4856, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, metadata !4857, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4858, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4859, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4860, metadata !DIExpression()), !dbg !4868
  tail call void @__hpvm__hint(i32 1) #24, !dbg !4869
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4868
  %call = tail call i8* @__hpvm__getNode() #24, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %call, metadata !4862, metadata !DIExpression()), !dbg !4868
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call) #24, !dbg !4872
  %conv = trunc i64 %call2 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4863, metadata !DIExpression()), !dbg !4868
  %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call) #24, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4864, metadata !DIExpression()), !dbg !4868
  %cmp = icmp ult i32 %conv, %soundSrcsSize, !dbg !4874
  %conv4 = trunc i64 %call3 to i32, !dbg !4873
  %cmp5 = icmp ult i32 %conv4, %nSamples, !dbg !4875
  %or.cond = and i1 %cmp, %cmp5, !dbg !4876
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4876

if.then:                                          ; preds = %entry
  %idxprom = and i64 %call2, 4294967295, !dbg !4877
  %arrayidx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom, !dbg !4877
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4877, !tbaa !3172
  %idxprom6 = and i64 %call3, 4294967295, !dbg !4877
  %arrayidx7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 1, i64 %idxprom6, !dbg !4877
  %1 = bitcast float* %arrayidx7 to i32*, !dbg !4877
  %2 = load i32, i32* %1, align 4, !dbg !4877, !tbaa !3362
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 3, !dbg !4878
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !dbg !4878, !tbaa !4330
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 5, !dbg !4879
  %4 = load float*, float** %m_pfDelayBuffer, align 8, !dbg !4879, !tbaa !4085
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 6, !dbg !4880
  %5 = load i32, i32* %m_nIn, align 8, !dbg !4880, !tbaa !4147
  %add = add nsw i32 %5, 1, !dbg !4881
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 4, !dbg !4882
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !dbg !4882, !tbaa !4114
  %rem = urem i32 %add, %6, !dbg !4883
  %idxprom16 = zext i32 %rem to i64, !dbg !4884
  %arrayidx17 = getelementptr inbounds float, float* %4, i64 %idxprom16, !dbg !4884
  %7 = bitcast float* %arrayidx17 to i32*, !dbg !4885
  store i32 %2, i32* %7, align 4, !dbg !4885, !tbaa !3362
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 7, !dbg !4886
  %8 = load i32, i32* %m_nOutA, align 4, !dbg !4886, !tbaa !4153
  %add25 = add nsw i32 %8, 1, !dbg !4887
  %rem30 = urem i32 %add25, %6, !dbg !4888
  %idxprom31 = zext i32 %rem30 to i64, !dbg !4889
  %arrayidx32 = getelementptr inbounds float, float* %4, i64 %idxprom31, !dbg !4889
  %9 = load float, float* %arrayidx32, align 4, !dbg !4889, !tbaa !3362
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 2, !dbg !4890
  %10 = load float, float* %m_fDelay, align 4, !dbg !4890, !tbaa !4144
  %sub = fsub float 1.000000e+00, %10, !dbg !4891
  %mul = fmul float %9, %sub, !dbg !4892
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 8, !dbg !4893
  %11 = load i32, i32* %m_nOutB, align 8, !dbg !4893, !tbaa !4158
  %add43 = add nsw i32 %11, 1, !dbg !4894
  %rem48 = urem i32 %add43, %6, !dbg !4895
  %idxprom49 = zext i32 %rem48 to i64, !dbg !4896
  %arrayidx50 = getelementptr inbounds float, float* %4, i64 %idxprom49, !dbg !4896
  %12 = load float, float* %arrayidx50, align 4, !dbg !4896, !tbaa !3362
  %mul55 = fmul float %10, %12, !dbg !4897
  %add56 = fadd float %mul, %mul55, !dbg !4898
  call void @llvm.dbg.value(metadata float %add56, metadata !4865, metadata !DIExpression()), !dbg !4899
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 10, !dbg !4900
  %13 = load float, float* %m_fInteriorGain, align 8, !dbg !4900, !tbaa !4070
  %mul60 = fmul float %13, %add56, !dbg !4901
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 0, i32 0, i32 1, !dbg !4902
  %call64 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff, i64 0) #24, !dbg !4903
  %14 = load float, float* %call64, align 4, !dbg !4903, !tbaa !3362
  %mul65 = fmul float %mul60, %14, !dbg !4904
  %15 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4905, !tbaa !3172
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %15, i64 0, i32 2, !dbg !4906
  %16 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !dbg !4906, !tbaa !4321
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %16, i64 0, i32 4, !dbg !4907
  %call68 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels, i64 0), !dbg !4905
  %17 = load float*, float** %call68, align 8, !dbg !4905, !tbaa !3172
  %arrayidx70 = getelementptr inbounds float, float* %17, i64 %idxprom6, !dbg !4905
  store float %mul65, float* %arrayidx70, align 4, !dbg !4908, !tbaa !3362
  %18 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4909, !tbaa !3172
  %BEncoder73 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %18, i64 0, i32 3, !dbg !4910
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder73, align 8, !dbg !4910, !tbaa !4330
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 11, !dbg !4911
  %20 = load float, float* %m_fExteriorGain, align 4, !dbg !4911, !tbaa !4073
  %mul74 = fmul float %add56, %20, !dbg !4912
  call void @llvm.dbg.value(metadata float %mul74, metadata !4865, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 1, metadata !4861, metadata !DIExpression()), !dbg !4868
  %21 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %22 = load i32, i32* %21, align 8, !dbg !4913, !tbaa !3055
  %cmp78214 = icmp ugt i32 %22, 1, !dbg !4916
  br i1 %cmp78214, label %for.body, label %if.end, !dbg !4917

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %23 = phi %class.CAmbisonicEncoderDist* [ %29, %for.body ], [ %19, %if.then ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4861, metadata !DIExpression()), !dbg !4868
  %m_pfCoeff82 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %23, i64 0, i32 0, i32 0, i32 1, !dbg !4918
  %call84 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff82, i64 %indvars.iv) #24, !dbg !4920
  %24 = load float, float* %call84, align 4, !dbg !4920, !tbaa !3362
  %mul85 = fmul float %mul74, %24, !dbg !4921
  %25 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4922, !tbaa !3172
  %BFormat88 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %25, i64 0, i32 2, !dbg !4923
  %26 = load %class.CBFormat*, %class.CBFormat** %BFormat88, align 8, !dbg !4923, !tbaa !4321
  %m_ppfChannels89 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i64 0, i32 4, !dbg !4924
  %call91 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels89, i64 %indvars.iv), !dbg !4922
  %27 = load float*, float** %call91, align 8, !dbg !4922, !tbaa !3172
  %arrayidx93 = getelementptr inbounds float, float* %27, i64 %idxprom6, !dbg !4922
  store float %mul85, float* %arrayidx93, align 4, !dbg !4925, !tbaa !3362
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4868
  %28 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4927, !tbaa !3172
  %BEncoder77 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %28, i64 0, i32 3, !dbg !4928
  %29 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder77, align 8, !dbg !4928, !tbaa !4330
  %30 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %29, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %31 = load i32, i32* %30, align 8, !dbg !4913, !tbaa !3055
  %32 = zext i32 %31 to i64, !dbg !4916
  %cmp78 = icmp ult i64 %indvars.iv.next, %32, !dbg !4916
  br i1 %cmp78, label %for.body, label %if.end, !dbg !4917, !llvm.loop !4929

if.end:                                           ; preds = %for.body, %if.then, %entry
  %idxprom94 = and i64 %call2, 4294967295, !dbg !4931
  %arrayidx95 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom94, !dbg !4931
  %33 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx95, align 8, !dbg !4931, !tbaa !3172
  %BEncoder96 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %33, i64 0, i32 3, !dbg !4932
  %34 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder96, align 8, !dbg !4932, !tbaa !4330
  %m_nIn97 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 6, !dbg !4933
  %35 = load i32, i32* %m_nIn97, align 8, !dbg !4933, !tbaa !4147
  %add98 = add i32 %nSamples, -1, !dbg !4934
  %sub99 = add i32 %add98, %35, !dbg !4935
  %m_nDelayBufferLength103 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 4, !dbg !4936
  %36 = load i32, i32* %m_nDelayBufferLength103, align 4, !dbg !4936, !tbaa !4114
  %rem104 = urem i32 %sub99, %36, !dbg !4937
  store i32 %rem104, i32* %m_nIn97, align 8, !dbg !4938, !tbaa !4147
  %m_nOutA112 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 7, !dbg !4939
  %37 = load i32, i32* %m_nOutA112, align 4, !dbg !4939, !tbaa !4153
  %add113 = add i32 %nSamples, -1, !dbg !4940
  %sub114 = add i32 %add113, %37, !dbg !4941
  %rem119 = urem i32 %sub114, %36, !dbg !4942
  store i32 %rem119, i32* %m_nOutA112, align 4, !dbg !4943, !tbaa !4153
  %m_nOutB127 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 8, !dbg !4944
  %38 = load i32, i32* %m_nOutB127, align 8, !dbg !4944, !tbaa !4158
  %add128 = add i32 %nSamples, -1, !dbg !4945
  %sub129 = add i32 %add128, %38, !dbg !4946
  %rem134 = urem i32 %sub129, %36, !dbg !4947
  store i32 %rem134, i32* %m_nOutB127, align 8, !dbg !4948, !tbaa !4158
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24, !dbg !4949
  ret void, !dbg !4950
}

	Num of in pointers = 1
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readnone %this, %"class.ILLIXR_AUDIO::Sound"** in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize) #7 align 2 !dbg !4854 {
entry:
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::ABAudio"* undef, metadata !4856, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, metadata !4857, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4858, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4859, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4860, metadata !DIExpression()), !dbg !4868
  tail call void @__hpvm__hint(i32 1) #24, !dbg !4869
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #24, !dbg !4870
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4868
  %call = tail call i8* @__hpvm__getNode() #24, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %call, metadata !4862, metadata !DIExpression()), !dbg !4868
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call) #24, !dbg !4872
  %conv = trunc i64 %call2 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4863, metadata !DIExpression()), !dbg !4868
  %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call) #24, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4864, metadata !DIExpression()), !dbg !4868
  %cmp = icmp ult i32 %conv, %soundSrcsSize, !dbg !4874
  %conv4 = trunc i64 %call3 to i32, !dbg !4873
  %cmp5 = icmp ult i32 %conv4, %nSamples, !dbg !4875
  %or.cond = and i1 %cmp, %cmp5, !dbg !4876
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4876

if.then:                                          ; preds = %entry
  %idxprom = and i64 %call2, 4294967295, !dbg !4877
  %arrayidx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom, !dbg !4877
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4877, !tbaa !3172
  %idxprom6 = and i64 %call3, 4294967295, !dbg !4877
  %arrayidx7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 1, i64 %idxprom6, !dbg !4877
  %1 = bitcast float* %arrayidx7 to i32*, !dbg !4877
  %2 = load i32, i32* %1, align 4, !dbg !4877, !tbaa !3362
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 3, !dbg !4878
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !dbg !4878, !tbaa !4330
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 5, !dbg !4879
  %4 = load float*, float** %m_pfDelayBuffer, align 8, !dbg !4879, !tbaa !4085
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 6, !dbg !4880
  %5 = load i32, i32* %m_nIn, align 8, !dbg !4880, !tbaa !4147
  %add = add nsw i32 %5, 1, !dbg !4881
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 4, !dbg !4882
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !dbg !4882, !tbaa !4114
  %rem = urem i32 %add, %6, !dbg !4883
  %idxprom16 = zext i32 %rem to i64, !dbg !4884
  %arrayidx17 = getelementptr inbounds float, float* %4, i64 %idxprom16, !dbg !4884
  %7 = bitcast float* %arrayidx17 to i32*, !dbg !4885
  store i32 %2, i32* %7, align 4, !dbg !4885, !tbaa !3362
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 7, !dbg !4886
  %8 = load i32, i32* %m_nOutA, align 4, !dbg !4886, !tbaa !4153
  %add25 = add nsw i32 %8, 1, !dbg !4887
  %rem30 = urem i32 %add25, %6, !dbg !4888
  %idxprom31 = zext i32 %rem30 to i64, !dbg !4889
  %arrayidx32 = getelementptr inbounds float, float* %4, i64 %idxprom31, !dbg !4889
  %9 = load float, float* %arrayidx32, align 4, !dbg !4889, !tbaa !3362
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 2, !dbg !4890
  %10 = load float, float* %m_fDelay, align 4, !dbg !4890, !tbaa !4144
  %sub = fsub float 1.000000e+00, %10, !dbg !4891
  %mul = fmul float %9, %sub, !dbg !4892
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 8, !dbg !4893
  %11 = load i32, i32* %m_nOutB, align 8, !dbg !4893, !tbaa !4158
  %add43 = add nsw i32 %11, 1, !dbg !4894
  %rem48 = urem i32 %add43, %6, !dbg !4895
  %idxprom49 = zext i32 %rem48 to i64, !dbg !4896
  %arrayidx50 = getelementptr inbounds float, float* %4, i64 %idxprom49, !dbg !4896
  %12 = load float, float* %arrayidx50, align 4, !dbg !4896, !tbaa !3362
  %mul55 = fmul float %10, %12, !dbg !4897
  %add56 = fadd float %mul, %mul55, !dbg !4898
  call void @llvm.dbg.value(metadata float %add56, metadata !4865, metadata !DIExpression()), !dbg !4899
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 10, !dbg !4900
  %13 = load float, float* %m_fInteriorGain, align 8, !dbg !4900, !tbaa !4070
  %mul60 = fmul float %13, %add56, !dbg !4901
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 0, i32 0, i32 1, !dbg !4902
  %call64 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff, i64 0) #24, !dbg !4903
  %14 = load float, float* %call64, align 4, !dbg !4903, !tbaa !3362
  %mul65 = fmul float %mul60, %14, !dbg !4904
  %15 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4905, !tbaa !3172
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %15, i64 0, i32 2, !dbg !4906
  %16 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !dbg !4906, !tbaa !4321
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %16, i64 0, i32 4, !dbg !4907
  %call68 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels, i64 0), !dbg !4905
  %17 = load float*, float** %call68, align 8, !dbg !4905, !tbaa !3172
  %arrayidx70 = getelementptr inbounds float, float* %17, i64 %idxprom6, !dbg !4905
  store float %mul65, float* %arrayidx70, align 4, !dbg !4908, !tbaa !3362
  %18 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4909, !tbaa !3172
  %BEncoder73 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %18, i64 0, i32 3, !dbg !4910
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder73, align 8, !dbg !4910, !tbaa !4330
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 11, !dbg !4911
  %20 = load float, float* %m_fExteriorGain, align 4, !dbg !4911, !tbaa !4073
  %mul74 = fmul float %add56, %20, !dbg !4912
  call void @llvm.dbg.value(metadata float %mul74, metadata !4865, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 1, metadata !4861, metadata !DIExpression()), !dbg !4868
  %21 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %22 = load i32, i32* %21, align 8, !dbg !4913, !tbaa !3055
  %cmp78214 = icmp ugt i32 %22, 1, !dbg !4916
  br i1 %cmp78214, label %for.body, label %if.end, !dbg !4917

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %23 = phi %class.CAmbisonicEncoderDist* [ %29, %for.body ], [ %19, %if.then ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4861, metadata !DIExpression()), !dbg !4868
  %m_pfCoeff82 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %23, i64 0, i32 0, i32 0, i32 1, !dbg !4918
  %call84 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff82, i64 %indvars.iv) #24, !dbg !4920
  %24 = load float, float* %call84, align 4, !dbg !4920, !tbaa !3362
  %mul85 = fmul float %mul74, %24, !dbg !4921
  %25 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4922, !tbaa !3172
  %BFormat88 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %25, i64 0, i32 2, !dbg !4923
  %26 = load %class.CBFormat*, %class.CBFormat** %BFormat88, align 8, !dbg !4923, !tbaa !4321
  %m_ppfChannels89 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i64 0, i32 4, !dbg !4924
  %call91 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels89, i64 %indvars.iv), !dbg !4922
  %27 = load float*, float** %call91, align 8, !dbg !4922, !tbaa !3172
  %arrayidx93 = getelementptr inbounds float, float* %27, i64 %idxprom6, !dbg !4922
  store float %mul85, float* %arrayidx93, align 4, !dbg !4925, !tbaa !3362
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4868
  %28 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4927, !tbaa !3172
  %BEncoder77 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %28, i64 0, i32 3, !dbg !4928
  %29 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder77, align 8, !dbg !4928, !tbaa !4330
  %30 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %29, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %31 = load i32, i32* %30, align 8, !dbg !4913, !tbaa !3055
  %32 = zext i32 %31 to i64, !dbg !4916
  %cmp78 = icmp ult i64 %indvars.iv.next, %32, !dbg !4916
  br i1 %cmp78, label %for.body, label %if.end, !dbg !4917, !llvm.loop !4929

if.end:                                           ; preds = %for.body, %if.then, %entry
  %idxprom94 = and i64 %call2, 4294967295, !dbg !4931
  %arrayidx95 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom94, !dbg !4931
  %33 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx95, align 8, !dbg !4931, !tbaa !3172
  %BEncoder96 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %33, i64 0, i32 3, !dbg !4932
  %34 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder96, align 8, !dbg !4932, !tbaa !4330
  %m_nIn97 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 6, !dbg !4933
  %35 = load i32, i32* %m_nIn97, align 8, !dbg !4933, !tbaa !4147
  %add98 = add i32 %nSamples, -1, !dbg !4934
  %sub99 = add i32 %add98, %35, !dbg !4935
  %m_nDelayBufferLength103 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 4, !dbg !4936
  %36 = load i32, i32* %m_nDelayBufferLength103, align 4, !dbg !4936, !tbaa !4114
  %rem104 = urem i32 %sub99, %36, !dbg !4937
  store i32 %rem104, i32* %m_nIn97, align 8, !dbg !4938, !tbaa !4147
  %m_nOutA112 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 7, !dbg !4939
  %37 = load i32, i32* %m_nOutA112, align 4, !dbg !4939, !tbaa !4153
  %add113 = add i32 %nSamples, -1, !dbg !4940
  %sub114 = add i32 %add113, %37, !dbg !4941
  %rem119 = urem i32 %sub114, %36, !dbg !4942
  store i32 %rem119, i32* %m_nOutA112, align 4, !dbg !4943, !tbaa !4153
  %m_nOutB127 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 8, !dbg !4944
  %38 = load i32, i32* %m_nOutB127, align 8, !dbg !4944, !tbaa !4158
  %add128 = add i32 %nSamples, -1, !dbg !4945
  %sub129 = add i32 %add128, %38, !dbg !4946
  %rem134 = urem i32 %sub129, %36, !dbg !4947
  store i32 %rem134, i32* %m_nOutB127, align 8, !dbg !4948, !tbaa !4158
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24, !dbg !4949
  ret void, !dbg !4950
}

Found call:   %call = tail call i8* @__hpvm__getNode() #24, !dbg !3053

; Function Attrs: nounwind readnone
declare i8* @llvm.hpvm.getNode() #24

	Substitute with:   %call1 = call i8* @llvm.hpvm.getNode()
Found call:   %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call1) #25, !dbg !3054

; Function Attrs: nounwind readnone
declare i64 @llvm.hpvm.getNodeInstanceID.x(i8*) #24

	Substitute with:   %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call1)
Found call:   %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call1) #25, !dbg !3055

; Function Attrs: nounwind readnone
declare i64 @llvm.hpvm.getNodeInstanceID.y(i8*) #24

	Substitute with:   %call33 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call1)
Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readnone %this, %"class.ILLIXR_AUDIO::Sound"** in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize) #7 align 2 !dbg !4854 {
entry:
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::ABAudio"* undef, metadata !4856, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, metadata !4857, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4858, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4859, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4860, metadata !DIExpression()), !dbg !4868
  tail call void @__hpvm__hint(i32 1) #25, !dbg !4869
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #25, !dbg !4870
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4868
  %call1 = call i8* @llvm.hpvm.getNode()
  %call = tail call i8* @__hpvm__getNode() #25, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4862, metadata !DIExpression()), !dbg !4868
  %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call1)
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call1) #25, !dbg !4872
  %conv = trunc i64 %call22 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4863, metadata !DIExpression()), !dbg !4868
  %call33 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call1)
  %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call1) #25, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4864, metadata !DIExpression()), !dbg !4868
  %cmp = icmp ult i32 %conv, %soundSrcsSize, !dbg !4874
  %conv4 = trunc i64 %call33 to i32, !dbg !4873
  %cmp5 = icmp ult i32 %conv4, %nSamples, !dbg !4875
  %or.cond = and i1 %cmp, %cmp5, !dbg !4876
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4876

if.then:                                          ; preds = %entry
  %idxprom = and i64 %call22, 4294967295, !dbg !4877
  %arrayidx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom, !dbg !4877
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4877, !tbaa !3172
  %idxprom6 = and i64 %call33, 4294967295, !dbg !4877
  %arrayidx7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 1, i64 %idxprom6, !dbg !4877
  %1 = bitcast float* %arrayidx7 to i32*, !dbg !4877
  %2 = load i32, i32* %1, align 4, !dbg !4877, !tbaa !3362
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 3, !dbg !4878
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !dbg !4878, !tbaa !4330
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 5, !dbg !4879
  %4 = load float*, float** %m_pfDelayBuffer, align 8, !dbg !4879, !tbaa !4085
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 6, !dbg !4880
  %5 = load i32, i32* %m_nIn, align 8, !dbg !4880, !tbaa !4147
  %add = add nsw i32 %5, 1, !dbg !4881
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 4, !dbg !4882
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !dbg !4882, !tbaa !4114
  %rem = urem i32 %add, %6, !dbg !4883
  %idxprom16 = zext i32 %rem to i64, !dbg !4884
  %arrayidx17 = getelementptr inbounds float, float* %4, i64 %idxprom16, !dbg !4884
  %7 = bitcast float* %arrayidx17 to i32*, !dbg !4885
  store i32 %2, i32* %7, align 4, !dbg !4885, !tbaa !3362
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 7, !dbg !4886
  %8 = load i32, i32* %m_nOutA, align 4, !dbg !4886, !tbaa !4153
  %add25 = add nsw i32 %8, 1, !dbg !4887
  %rem30 = urem i32 %add25, %6, !dbg !4888
  %idxprom31 = zext i32 %rem30 to i64, !dbg !4889
  %arrayidx32 = getelementptr inbounds float, float* %4, i64 %idxprom31, !dbg !4889
  %9 = load float, float* %arrayidx32, align 4, !dbg !4889, !tbaa !3362
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 2, !dbg !4890
  %10 = load float, float* %m_fDelay, align 4, !dbg !4890, !tbaa !4144
  %sub = fsub float 1.000000e+00, %10, !dbg !4891
  %mul = fmul float %9, %sub, !dbg !4892
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 8, !dbg !4893
  %11 = load i32, i32* %m_nOutB, align 8, !dbg !4893, !tbaa !4158
  %add43 = add nsw i32 %11, 1, !dbg !4894
  %rem48 = urem i32 %add43, %6, !dbg !4895
  %idxprom49 = zext i32 %rem48 to i64, !dbg !4896
  %arrayidx50 = getelementptr inbounds float, float* %4, i64 %idxprom49, !dbg !4896
  %12 = load float, float* %arrayidx50, align 4, !dbg !4896, !tbaa !3362
  %mul55 = fmul float %10, %12, !dbg !4897
  %add56 = fadd float %mul, %mul55, !dbg !4898
  call void @llvm.dbg.value(metadata float %add56, metadata !4865, metadata !DIExpression()), !dbg !4899
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 10, !dbg !4900
  %13 = load float, float* %m_fInteriorGain, align 8, !dbg !4900, !tbaa !4070
  %mul60 = fmul float %13, %add56, !dbg !4901
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 0, i32 0, i32 1, !dbg !4902
  %call64 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff, i64 0) #25, !dbg !4903
  %14 = load float, float* %call64, align 4, !dbg !4903, !tbaa !3362
  %mul65 = fmul float %mul60, %14, !dbg !4904
  %15 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4905, !tbaa !3172
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %15, i64 0, i32 2, !dbg !4906
  %16 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !dbg !4906, !tbaa !4321
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %16, i64 0, i32 4, !dbg !4907
  %call68 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels, i64 0), !dbg !4905
  %17 = load float*, float** %call68, align 8, !dbg !4905, !tbaa !3172
  %arrayidx70 = getelementptr inbounds float, float* %17, i64 %idxprom6, !dbg !4905
  store float %mul65, float* %arrayidx70, align 4, !dbg !4908, !tbaa !3362
  %18 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4909, !tbaa !3172
  %BEncoder73 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %18, i64 0, i32 3, !dbg !4910
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder73, align 8, !dbg !4910, !tbaa !4330
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 11, !dbg !4911
  %20 = load float, float* %m_fExteriorGain, align 4, !dbg !4911, !tbaa !4073
  %mul74 = fmul float %add56, %20, !dbg !4912
  call void @llvm.dbg.value(metadata float %mul74, metadata !4865, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 1, metadata !4861, metadata !DIExpression()), !dbg !4868
  %21 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %22 = load i32, i32* %21, align 8, !dbg !4913, !tbaa !3055
  %cmp78214 = icmp ugt i32 %22, 1, !dbg !4916
  br i1 %cmp78214, label %for.body, label %if.end, !dbg !4917

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %23 = phi %class.CAmbisonicEncoderDist* [ %29, %for.body ], [ %19, %if.then ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4861, metadata !DIExpression()), !dbg !4868
  %m_pfCoeff82 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %23, i64 0, i32 0, i32 0, i32 1, !dbg !4918
  %call84 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff82, i64 %indvars.iv) #25, !dbg !4920
  %24 = load float, float* %call84, align 4, !dbg !4920, !tbaa !3362
  %mul85 = fmul float %mul74, %24, !dbg !4921
  %25 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4922, !tbaa !3172
  %BFormat88 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %25, i64 0, i32 2, !dbg !4923
  %26 = load %class.CBFormat*, %class.CBFormat** %BFormat88, align 8, !dbg !4923, !tbaa !4321
  %m_ppfChannels89 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i64 0, i32 4, !dbg !4924
  %call91 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels89, i64 %indvars.iv), !dbg !4922
  %27 = load float*, float** %call91, align 8, !dbg !4922, !tbaa !3172
  %arrayidx93 = getelementptr inbounds float, float* %27, i64 %idxprom6, !dbg !4922
  store float %mul85, float* %arrayidx93, align 4, !dbg !4925, !tbaa !3362
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4868
  %28 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4927, !tbaa !3172
  %BEncoder77 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %28, i64 0, i32 3, !dbg !4928
  %29 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder77, align 8, !dbg !4928, !tbaa !4330
  %30 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %29, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %31 = load i32, i32* %30, align 8, !dbg !4913, !tbaa !3055
  %32 = zext i32 %31 to i64, !dbg !4916
  %cmp78 = icmp ult i64 %indvars.iv.next, %32, !dbg !4916
  br i1 %cmp78, label %for.body, label %if.end, !dbg !4917, !llvm.loop !4929

if.end:                                           ; preds = %for.body, %if.then, %entry
  %idxprom94 = and i64 %call22, 4294967295, !dbg !4931
  %arrayidx95 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom94, !dbg !4931
  %33 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx95, align 8, !dbg !4931, !tbaa !3172
  %BEncoder96 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %33, i64 0, i32 3, !dbg !4932
  %34 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder96, align 8, !dbg !4932, !tbaa !4330
  %m_nIn97 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 6, !dbg !4933
  %35 = load i32, i32* %m_nIn97, align 8, !dbg !4933, !tbaa !4147
  %add98 = add i32 %nSamples, -1, !dbg !4934
  %sub99 = add i32 %add98, %35, !dbg !4935
  %m_nDelayBufferLength103 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 4, !dbg !4936
  %36 = load i32, i32* %m_nDelayBufferLength103, align 4, !dbg !4936, !tbaa !4114
  %rem104 = urem i32 %sub99, %36, !dbg !4937
  store i32 %rem104, i32* %m_nIn97, align 8, !dbg !4938, !tbaa !4147
  %m_nOutA112 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 7, !dbg !4939
  %37 = load i32, i32* %m_nOutA112, align 4, !dbg !4939, !tbaa !4153
  %add113 = add i32 %nSamples, -1, !dbg !4940
  %sub114 = add i32 %add113, %37, !dbg !4941
  %rem119 = urem i32 %sub114, %36, !dbg !4942
  store i32 %rem119, i32* %m_nOutA112, align 4, !dbg !4943, !tbaa !4153
  %m_nOutB127 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 8, !dbg !4944
  %38 = load i32, i32* %m_nOutB127, align 8, !dbg !4944, !tbaa !4158
  %add128 = add i32 %nSamples, -1, !dbg !4945
  %sub129 = add i32 %add128, %38, !dbg !4946
  %rem134 = urem i32 %sub129, %36, !dbg !4947
  store i32 %rem134, i32* %m_nOutB127, align 8, !dbg !4948, !tbaa !4158
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #25, !dbg !4949
  ret void, !dbg !4950
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj undef, i64 %bytes_soundSrcs, 0
  %returnStruct = insertvalue %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj undef, i64 %bytes_soundSrcs, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #25, !dbg !3154
Found return statement of BB:   ret void, !dbg !3155
	Substitute return with:   ret %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readnone %this, %"class.ILLIXR_AUDIO::Sound"** in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize) #7 align 2 !dbg !4854 {
entry:
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::ABAudio"* undef, metadata !4856, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, metadata !4857, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4858, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4859, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4860, metadata !DIExpression()), !dbg !4868
  tail call void @__hpvm__hint(i32 1) #25, !dbg !4869
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #25, !dbg !4870
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4868
  %call1 = call i8* @llvm.hpvm.getNode()
  %call = tail call i8* @__hpvm__getNode() #25, !dbg !4871
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4862, metadata !DIExpression()), !dbg !4868
  %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call1)
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call1) #25, !dbg !4872
  %conv = trunc i64 %call22 to i32, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4863, metadata !DIExpression()), !dbg !4868
  %call33 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call1)
  %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call1) #25, !dbg !4873
  call void @llvm.dbg.value(metadata i32 undef, metadata !4864, metadata !DIExpression()), !dbg !4868
  %cmp = icmp ult i32 %conv, %soundSrcsSize, !dbg !4874
  %conv4 = trunc i64 %call33 to i32, !dbg !4873
  %cmp5 = icmp ult i32 %conv4, %nSamples, !dbg !4875
  %or.cond = and i1 %cmp, %cmp5, !dbg !4876
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4876

if.then:                                          ; preds = %entry
  %idxprom = and i64 %call22, 4294967295, !dbg !4877
  %arrayidx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom, !dbg !4877
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4877, !tbaa !3172
  %idxprom6 = and i64 %call33, 4294967295, !dbg !4877
  %arrayidx7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 1, i64 %idxprom6, !dbg !4877
  %1 = bitcast float* %arrayidx7 to i32*, !dbg !4877
  %2 = load i32, i32* %1, align 4, !dbg !4877, !tbaa !3362
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 3, !dbg !4878
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !dbg !4878, !tbaa !4330
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 5, !dbg !4879
  %4 = load float*, float** %m_pfDelayBuffer, align 8, !dbg !4879, !tbaa !4085
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 6, !dbg !4880
  %5 = load i32, i32* %m_nIn, align 8, !dbg !4880, !tbaa !4147
  %add = add nsw i32 %5, 1, !dbg !4881
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 4, !dbg !4882
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !dbg !4882, !tbaa !4114
  %rem = urem i32 %add, %6, !dbg !4883
  %idxprom16 = zext i32 %rem to i64, !dbg !4884
  %arrayidx17 = getelementptr inbounds float, float* %4, i64 %idxprom16, !dbg !4884
  %7 = bitcast float* %arrayidx17 to i32*, !dbg !4885
  store i32 %2, i32* %7, align 4, !dbg !4885, !tbaa !3362
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 7, !dbg !4886
  %8 = load i32, i32* %m_nOutA, align 4, !dbg !4886, !tbaa !4153
  %add25 = add nsw i32 %8, 1, !dbg !4887
  %rem30 = urem i32 %add25, %6, !dbg !4888
  %idxprom31 = zext i32 %rem30 to i64, !dbg !4889
  %arrayidx32 = getelementptr inbounds float, float* %4, i64 %idxprom31, !dbg !4889
  %9 = load float, float* %arrayidx32, align 4, !dbg !4889, !tbaa !3362
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 2, !dbg !4890
  %10 = load float, float* %m_fDelay, align 4, !dbg !4890, !tbaa !4144
  %sub = fsub float 1.000000e+00, %10, !dbg !4891
  %mul = fmul float %9, %sub, !dbg !4892
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 8, !dbg !4893
  %11 = load i32, i32* %m_nOutB, align 8, !dbg !4893, !tbaa !4158
  %add43 = add nsw i32 %11, 1, !dbg !4894
  %rem48 = urem i32 %add43, %6, !dbg !4895
  %idxprom49 = zext i32 %rem48 to i64, !dbg !4896
  %arrayidx50 = getelementptr inbounds float, float* %4, i64 %idxprom49, !dbg !4896
  %12 = load float, float* %arrayidx50, align 4, !dbg !4896, !tbaa !3362
  %mul55 = fmul float %10, %12, !dbg !4897
  %add56 = fadd float %mul, %mul55, !dbg !4898
  call void @llvm.dbg.value(metadata float %add56, metadata !4865, metadata !DIExpression()), !dbg !4899
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 10, !dbg !4900
  %13 = load float, float* %m_fInteriorGain, align 8, !dbg !4900, !tbaa !4070
  %mul60 = fmul float %13, %add56, !dbg !4901
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 0, i32 0, i32 1, !dbg !4902
  %call64 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff, i64 0) #25, !dbg !4903
  %14 = load float, float* %call64, align 4, !dbg !4903, !tbaa !3362
  %mul65 = fmul float %mul60, %14, !dbg !4904
  %15 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4905, !tbaa !3172
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %15, i64 0, i32 2, !dbg !4906
  %16 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !dbg !4906, !tbaa !4321
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %16, i64 0, i32 4, !dbg !4907
  %call68 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels, i64 0), !dbg !4905
  %17 = load float*, float** %call68, align 8, !dbg !4905, !tbaa !3172
  %arrayidx70 = getelementptr inbounds float, float* %17, i64 %idxprom6, !dbg !4905
  store float %mul65, float* %arrayidx70, align 4, !dbg !4908, !tbaa !3362
  %18 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4909, !tbaa !3172
  %BEncoder73 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %18, i64 0, i32 3, !dbg !4910
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder73, align 8, !dbg !4910, !tbaa !4330
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 11, !dbg !4911
  %20 = load float, float* %m_fExteriorGain, align 4, !dbg !4911, !tbaa !4073
  %mul74 = fmul float %add56, %20, !dbg !4912
  call void @llvm.dbg.value(metadata float %mul74, metadata !4865, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 1, metadata !4861, metadata !DIExpression()), !dbg !4868
  %21 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %22 = load i32, i32* %21, align 8, !dbg !4913, !tbaa !3055
  %cmp78214 = icmp ugt i32 %22, 1, !dbg !4916
  br i1 %cmp78214, label %for.body, label %if.end, !dbg !4917

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %23 = phi %class.CAmbisonicEncoderDist* [ %29, %for.body ], [ %19, %if.then ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4861, metadata !DIExpression()), !dbg !4868
  %m_pfCoeff82 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %23, i64 0, i32 0, i32 0, i32 1, !dbg !4918
  %call84 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff82, i64 %indvars.iv) #25, !dbg !4920
  %24 = load float, float* %call84, align 4, !dbg !4920, !tbaa !3362
  %mul85 = fmul float %mul74, %24, !dbg !4921
  %25 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4922, !tbaa !3172
  %BFormat88 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %25, i64 0, i32 2, !dbg !4923
  %26 = load %class.CBFormat*, %class.CBFormat** %BFormat88, align 8, !dbg !4923, !tbaa !4321
  %m_ppfChannels89 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i64 0, i32 4, !dbg !4924
  %call91 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels89, i64 %indvars.iv), !dbg !4922
  %27 = load float*, float** %call91, align 8, !dbg !4922, !tbaa !3172
  %arrayidx93 = getelementptr inbounds float, float* %27, i64 %idxprom6, !dbg !4922
  store float %mul85, float* %arrayidx93, align 4, !dbg !4925, !tbaa !3362
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4868
  %28 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4927, !tbaa !3172
  %BEncoder77 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %28, i64 0, i32 3, !dbg !4928
  %29 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder77, align 8, !dbg !4928, !tbaa !4330
  %30 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %29, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4913
  %31 = load i32, i32* %30, align 8, !dbg !4913, !tbaa !3055
  %32 = zext i32 %31 to i64, !dbg !4916
  %cmp78 = icmp ult i64 %indvars.iv.next, %32, !dbg !4916
  br i1 %cmp78, label %for.body, label %if.end, !dbg !4917, !llvm.loop !4929

if.end:                                           ; preds = %for.body, %if.then, %entry
  %idxprom94 = and i64 %call22, 4294967295, !dbg !4931
  %arrayidx95 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom94, !dbg !4931
  %33 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx95, align 8, !dbg !4931, !tbaa !3172
  %BEncoder96 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %33, i64 0, i32 3, !dbg !4932
  %34 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder96, align 8, !dbg !4932, !tbaa !4330
  %m_nIn97 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 6, !dbg !4933
  %35 = load i32, i32* %m_nIn97, align 8, !dbg !4933, !tbaa !4147
  %add98 = add i32 %nSamples, -1, !dbg !4934
  %sub99 = add i32 %add98, %35, !dbg !4935
  %m_nDelayBufferLength103 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 4, !dbg !4936
  %36 = load i32, i32* %m_nDelayBufferLength103, align 4, !dbg !4936, !tbaa !4114
  %rem104 = urem i32 %sub99, %36, !dbg !4937
  store i32 %rem104, i32* %m_nIn97, align 8, !dbg !4938, !tbaa !4147
  %m_nOutA112 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 7, !dbg !4939
  %37 = load i32, i32* %m_nOutA112, align 4, !dbg !4939, !tbaa !4153
  %add113 = add i32 %nSamples, -1, !dbg !4940
  %sub114 = add i32 %add113, %37, !dbg !4941
  %rem119 = urem i32 %sub114, %36, !dbg !4942
  store i32 %rem119, i32* %m_nOutA112, align 4, !dbg !4943, !tbaa !4153
  %m_nOutB127 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 8, !dbg !4944
  %38 = load i32, i32* %m_nOutB127, align 8, !dbg !4944, !tbaa !4158
  %add128 = add i32 %nSamples, -1, !dbg !4945
  %sub129 = add i32 %add128, %38, !dbg !4946
  %rem134 = urem i32 %sub129, %36, !dbg !4947
  store i32 %rem134, i32* %m_nOutB127, align 8, !dbg !4948, !tbaa !4158
  %returnStruct = insertvalue %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj undef, i64 %bytes_soundSrcs, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #25, !dbg !4949
  ret %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj %returnStruct, !dbg !4950
}

Erase 6 Statements:
  tail call void @__hpvm__hint(i32 1) #25, !dbg !3051
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #25, !dbg !3052
  %call = tail call i8* @__hpvm__getNode() #25, !dbg !3053
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call1) #25, !dbg !3054
  %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call1) #25, !dbg !3055
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #25, !dbg !3154
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #25, !dbg !3154
	Erasing   %call3 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call1) #25, !dbg !3055
	Erasing   %call2 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call1) #25, !dbg !3054
	Erasing   %call = tail call i8* @__hpvm__getNode() #25, !dbg !3053
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i32 1, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs) #25, !dbg !3052
	Erasing   tail call void @__hpvm__hint(i32 1) #25, !dbg !3051
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readnone %this, %"class.ILLIXR_AUDIO::Sound"** in out %soundSrcs, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize) #7 align 2 !dbg !4854 {
entry:
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::ABAudio"* undef, metadata !4856, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, metadata !4857, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i64 %bytes_soundSrcs, metadata !4858, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %nSamples, metadata !4859, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 %soundSrcsSize, metadata !4860, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4868
  %call1 = call i8* @llvm.hpvm.getNode()
  call void @llvm.dbg.value(metadata i8* %call1, metadata !4862, metadata !DIExpression()), !dbg !4868
  %call22 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call1)
  %conv = trunc i64 %call22 to i32, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4863, metadata !DIExpression()), !dbg !4868
  %call33 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call1)
  call void @llvm.dbg.value(metadata i32 undef, metadata !4864, metadata !DIExpression()), !dbg !4868
  %cmp = icmp ult i32 %conv, %soundSrcsSize, !dbg !4870
  %conv4 = trunc i64 %call33 to i32, !dbg !4871
  %cmp5 = icmp ult i32 %conv4, %nSamples, !dbg !4872
  %or.cond = and i1 %cmp, %cmp5, !dbg !4873
  br i1 %or.cond, label %if.then, label %if.end, !dbg !4873

if.then:                                          ; preds = %entry
  %idxprom = and i64 %call22, 4294967295, !dbg !4874
  %arrayidx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom, !dbg !4874
  %0 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4874, !tbaa !3172
  %idxprom6 = and i64 %call33, 4294967295, !dbg !4874
  %arrayidx7 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 1, i64 %idxprom6, !dbg !4874
  %1 = bitcast float* %arrayidx7 to i32*, !dbg !4874
  %2 = load i32, i32* %1, align 4, !dbg !4874, !tbaa !3362
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %0, i64 0, i32 3, !dbg !4875
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !dbg !4875, !tbaa !4330
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 5, !dbg !4876
  %4 = load float*, float** %m_pfDelayBuffer, align 8, !dbg !4876, !tbaa !4085
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 6, !dbg !4877
  %5 = load i32, i32* %m_nIn, align 8, !dbg !4877, !tbaa !4147
  %add = add nsw i32 %5, 1, !dbg !4878
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 4, !dbg !4879
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !dbg !4879, !tbaa !4114
  %rem = urem i32 %add, %6, !dbg !4880
  %idxprom16 = zext i32 %rem to i64, !dbg !4881
  %arrayidx17 = getelementptr inbounds float, float* %4, i64 %idxprom16, !dbg !4881
  %7 = bitcast float* %arrayidx17 to i32*, !dbg !4882
  store i32 %2, i32* %7, align 4, !dbg !4882, !tbaa !3362
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 7, !dbg !4883
  %8 = load i32, i32* %m_nOutA, align 4, !dbg !4883, !tbaa !4153
  %add25 = add nsw i32 %8, 1, !dbg !4884
  %rem30 = urem i32 %add25, %6, !dbg !4885
  %idxprom31 = zext i32 %rem30 to i64, !dbg !4886
  %arrayidx32 = getelementptr inbounds float, float* %4, i64 %idxprom31, !dbg !4886
  %9 = load float, float* %arrayidx32, align 4, !dbg !4886, !tbaa !3362
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 2, !dbg !4887
  %10 = load float, float* %m_fDelay, align 4, !dbg !4887, !tbaa !4144
  %sub = fsub float 1.000000e+00, %10, !dbg !4888
  %mul = fmul float %9, %sub, !dbg !4889
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 8, !dbg !4890
  %11 = load i32, i32* %m_nOutB, align 8, !dbg !4890, !tbaa !4158
  %add43 = add nsw i32 %11, 1, !dbg !4891
  %rem48 = urem i32 %add43, %6, !dbg !4892
  %idxprom49 = zext i32 %rem48 to i64, !dbg !4893
  %arrayidx50 = getelementptr inbounds float, float* %4, i64 %idxprom49, !dbg !4893
  %12 = load float, float* %arrayidx50, align 4, !dbg !4893, !tbaa !3362
  %mul55 = fmul float %10, %12, !dbg !4894
  %add56 = fadd float %mul, %mul55, !dbg !4895
  call void @llvm.dbg.value(metadata float %add56, metadata !4865, metadata !DIExpression()), !dbg !4896
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 10, !dbg !4897
  %13 = load float, float* %m_fInteriorGain, align 8, !dbg !4897, !tbaa !4070
  %mul60 = fmul float %13, %add56, !dbg !4898
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %3, i64 0, i32 0, i32 0, i32 1, !dbg !4899
  %call64 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff, i64 0) #25, !dbg !4900
  %14 = load float, float* %call64, align 4, !dbg !4900, !tbaa !3362
  %mul65 = fmul float %mul60, %14, !dbg !4901
  %15 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4902, !tbaa !3172
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %15, i64 0, i32 2, !dbg !4903
  %16 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !dbg !4903, !tbaa !4321
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %16, i64 0, i32 4, !dbg !4904
  %call68 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels, i64 0), !dbg !4902
  %17 = load float*, float** %call68, align 8, !dbg !4902, !tbaa !3172
  %arrayidx70 = getelementptr inbounds float, float* %17, i64 %idxprom6, !dbg !4902
  store float %mul65, float* %arrayidx70, align 4, !dbg !4905, !tbaa !3362
  %18 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4906, !tbaa !3172
  %BEncoder73 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %18, i64 0, i32 3, !dbg !4907
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder73, align 8, !dbg !4907, !tbaa !4330
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 11, !dbg !4908
  %20 = load float, float* %m_fExteriorGain, align 4, !dbg !4908, !tbaa !4073
  %mul74 = fmul float %add56, %20, !dbg !4909
  call void @llvm.dbg.value(metadata float %mul74, metadata !4865, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i32 1, metadata !4861, metadata !DIExpression()), !dbg !4868
  %21 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %19, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4910
  %22 = load i32, i32* %21, align 8, !dbg !4910, !tbaa !3055
  %cmp78214 = icmp ugt i32 %22, 1, !dbg !4913
  br i1 %cmp78214, label %for.body, label %if.end, !dbg !4914

for.body:                                         ; preds = %for.body, %if.then
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 1, %if.then ]
  %23 = phi %class.CAmbisonicEncoderDist* [ %29, %for.body ], [ %19, %if.then ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4861, metadata !DIExpression()), !dbg !4868
  %m_pfCoeff82 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %23, i64 0, i32 0, i32 0, i32 1, !dbg !4915
  %call84 = tail call dereferenceable(4) float* @_ZNSt6vectorIfSaIfEEixEm(%"class.std::vector"* nonnull %m_pfCoeff82, i64 %indvars.iv) #25, !dbg !4917
  %24 = load float, float* %call84, align 4, !dbg !4917, !tbaa !3362
  %mul85 = fmul float %mul74, %24, !dbg !4918
  %25 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4919, !tbaa !3172
  %BFormat88 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %25, i64 0, i32 2, !dbg !4920
  %26 = load %class.CBFormat*, %class.CBFormat** %BFormat88, align 8, !dbg !4920, !tbaa !4321
  %m_ppfChannels89 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %26, i64 0, i32 4, !dbg !4921
  %call91 = tail call dereferenceable(8) float** @_ZNKSt10unique_ptrIA_PfSt14default_deleteIS1_EEixEm(%"class.std::unique_ptr"* nonnull %m_ppfChannels89, i64 %indvars.iv), !dbg !4919
  %27 = load float*, float** %call91, align 8, !dbg !4919, !tbaa !3172
  %arrayidx93 = getelementptr inbounds float, float* %27, i64 %idxprom6, !dbg !4919
  store float %mul85, float* %arrayidx93, align 4, !dbg !4922, !tbaa !3362
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4923
  call void @llvm.dbg.value(metadata i32 undef, metadata !4861, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4868
  %28 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx, align 8, !dbg !4924, !tbaa !3172
  %BEncoder77 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %28, i64 0, i32 3, !dbg !4925
  %29 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder77, align 8, !dbg !4925, !tbaa !4330
  %30 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %29, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !4910
  %31 = load i32, i32* %30, align 8, !dbg !4910, !tbaa !3055
  %32 = zext i32 %31 to i64, !dbg !4913
  %cmp78 = icmp ult i64 %indvars.iv.next, %32, !dbg !4913
  br i1 %cmp78, label %for.body, label %if.end, !dbg !4914, !llvm.loop !4926

if.end:                                           ; preds = %for.body, %if.then, %entry
  %idxprom94 = and i64 %call22, 4294967295, !dbg !4928
  %arrayidx95 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %soundSrcs, i64 %idxprom94, !dbg !4928
  %33 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %arrayidx95, align 8, !dbg !4928, !tbaa !3172
  %BEncoder96 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %33, i64 0, i32 3, !dbg !4929
  %34 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder96, align 8, !dbg !4929, !tbaa !4330
  %m_nIn97 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 6, !dbg !4930
  %35 = load i32, i32* %m_nIn97, align 8, !dbg !4930, !tbaa !4147
  %add98 = add i32 %nSamples, -1, !dbg !4931
  %sub99 = add i32 %add98, %35, !dbg !4932
  %m_nDelayBufferLength103 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 4, !dbg !4933
  %36 = load i32, i32* %m_nDelayBufferLength103, align 4, !dbg !4933, !tbaa !4114
  %rem104 = urem i32 %sub99, %36, !dbg !4934
  store i32 %rem104, i32* %m_nIn97, align 8, !dbg !4935, !tbaa !4147
  %m_nOutA112 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 7, !dbg !4936
  %37 = load i32, i32* %m_nOutA112, align 4, !dbg !4936, !tbaa !4153
  %add113 = add i32 %nSamples, -1, !dbg !4937
  %sub114 = add i32 %add113, %37, !dbg !4938
  %rem119 = urem i32 %sub114, %36, !dbg !4939
  store i32 %rem119, i32* %m_nOutA112, align 4, !dbg !4940, !tbaa !4153
  %m_nOutB127 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %34, i64 0, i32 8, !dbg !4941
  %38 = load i32, i32* %m_nOutB127, align 8, !dbg !4941, !tbaa !4158
  %add128 = add i32 %nSamples, -1, !dbg !4942
  %sub129 = add i32 %add128, %38, !dbg !4943
  %rem134 = urem i32 %sub129, %36, !dbg !4944
  store i32 %rem134, i32* %m_nOutB127, align 8, !dbg !4945, !tbaa !4158
  %returnStruct = insertvalue %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj undef, i64 %bytes_soundSrcs, 0
  ret %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj %returnStruct, !dbg !4946
}

Return type value: %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj = type <{ i64 }>
Cloning Function: _ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj
Old Function Type: void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::Sound"**, i64, i32, i32)
New Function Type: %struct.out._ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.ILLIXR_AUDIO::Sound"**, i64, i32, i32)
Old Function name: _ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj
New Function name: _ZN12ILLIXR_AUDIO7ABAudio17audio_process_fxpEPPNS_5SoundEmjj_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.ILLIXR_AUDIO::ABAudio"* %this : %"class.ILLIXR_AUDIO::ABAudio"* %0
1. %"class.ILLIXR_AUDIO::Sound"** %soundSrcs : %"class.ILLIXR_AUDIO::Sound"** %0
2. i64 %bytes_soundSrcs : i64 %0
3. i32 %nSamples : i32 %0
4. i32 %soundSrcsSize : i32 %0
opt: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Transforms/Utils/CloneFunction.cpp:130: void llvm::CloneFunctionInto(llvm::Function*, const llvm::Function*, llvm::ValueToValueMapTy&, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>&, const char*, llvm::ClonedCodeInfo*, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*): Assertion `!MustCloneSP || ModuleLevelChanges' failed.
Stack dump:
0.	Program arguments: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
1.	Running pass 'Pass to generate HPVM IR from LLVM IR (with dummy function calls)' on module 'build/seq/main.ll'.
 #0 0x0000000003067291 llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:533:0
 #1 0x0000000003067324 PrintStackTraceSignalHandler(void*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:594:0
 #2 0x00000000030651f8 llvm::sys::RunSignalHandlers() /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Signals.cpp:68:0
 #3 0x0000000003066c46 SignalHandler(int) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:385:0
 #4 0x00007fce715b0390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)
 #5 0x00007fce70322428 raise /build/glibc-LK5gWL/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0
 #6 0x00007fce7032402a abort /build/glibc-LK5gWL/glibc-2.23/stdlib/abort.c:91:0
 #7 0x00007fce7031abd7 __assert_fail_base /build/glibc-LK5gWL/glibc-2.23/assert/assert.c:92:0
 #8 0x00007fce7031ac82 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc82)
 #9 0x00000000030ac659 llvm::CloneFunctionInto(llvm::Function*, llvm::Function const*, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>&, char const*, llvm::ClonedCodeInfo*, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Transforms/Utils/CloneFunction.cpp:133:0
#10 0x00007fce700bf118 hpvmUtils::cloneFunction(llvm::Function*, llvm::FunctionType*, bool, llvm::SmallVectorImpl<llvm::ReturnInst*>*, std::vector<llvm::Argument*, std::allocator<llvm::Argument*> >*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/HPVMUtils.h:307:0
#11 0x00007fce700c6134 genhpvm::GenHPVM::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/GenHPVM/GenHPVM.cpp:758:0
#12 0x000000000276b70b (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1750:0
#13 0x000000000276bead llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1863:0
#14 0x000000000276c0b3 llvm::legacy::PassManager::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1895:0
#15 0x000000000183dba7 main /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/opt/opt.cpp:892:0
#16 0x00007fce7030d830 __libc_start_main /build/glibc-LK5gWL/glibc-2.23/csu/../csu/libc-start.c:325:0
#17 0x00000000017ffb89 _start (/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt+0x17ffb89)
Makefile:126: recipe for target 'build/seq/main.hpvm.ll' failed
make: *** [build/seq/main.hpvm.ll] Aborted
