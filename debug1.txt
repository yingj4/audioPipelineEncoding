Script started on Sun 30 Aug 2020 04:28:14 PM CDT
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/audioEncodingNoPara[00m$ make TARGET=seq
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/clang -O3 -std=c++14 -Wall -fPIC -I./include -DDEVICE=CPU_TARGET -I./libspatialaudio/build/Debug/include -emit-llvm -S -o build/seq/main.ll src//main.cpp
[1msrc//main.cpp:814:20: [0m[0;1;35mwarning: [0m[1munused variable 'outSize' [-Wunused-variable][0m
            size_t outSize = ((RootOut*) ret)->result;
[0;1;32m                   ^
[0m1 warning generated.
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.body.epil
	discovered a new reachable node %for.body.lr.ph.new
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
	discovered a new reachable node %if.then.i11
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16
	discovered a new reachable node %if.else.i13
	discovered a new reachable node %if.then9.i15
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then9.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc9_crit_edge.us
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.body4.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.end9.i
	discovered a new reachable node %call12.i.noexc
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN21CAmbisonicEncoderDistD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.cond18.for.end_crit_edge.us.unr-lcssa
	discovered a new reachable node %for.cond18.for.end_crit_edge.us
	discovered a new reachable node %for.cond.for.end44_crit_edge
	discovered a new reachable node %for.body20.us.epil
	discovered a new reachable node %for.body20.us
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.then.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %call5.i.i.i9.i.noexc
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i.i
	discovered a new reachable node %invoke.cont8.i.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
	discovered a new reachable node %call5.i.i.i9.i.noexc79
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	discovered a new reachable node %if.else.i115
	discovered a new reachable node %invoke.cont.i.i129
	discovered a new reachable node %invoke.cont8.i.i134
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137
	discovered a new reachable node %if.end.sink.split
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then.i63.i.i135
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i130
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122
	discovered a new reachable node %if.then.i104
	discovered a new reachable node %if.then.i.i85
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %if.then.i.i147
	discovered a new reachable node %lpad9
	discovered a new reachable node %if.then.i63.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.then.i.i65
	discovered a new reachable node %lpad2
	discovered a new reachable node %if.then.i.i142
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %call5.i.i.i9.i.noexc161
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	discovered a new reachable node %if.else.i197
	discovered a new reachable node %invoke.cont.i.i211
	discovered a new reachable node %invoke.cont8.i.i216
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
	discovered a new reachable node %if.then.i63.i.i217
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i212
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204
	discovered a new reachable node %if.then.i186
	discovered a new reachable node %if.then.i.i167
	discovered a new reachable node %lpad31
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZN8CBFormatpLERKS_.exit
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body4.us.i.preheader
	discovered a new reachable node %for.body4.us.i.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us.i
	discovered a new reachable node %for.body4.us.i
	discovered a new reachable node %for.body4.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	discovered a new reachable node %return
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont14
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body45.lr.ph
	discovered a new reachable node %for.body45.us
	discovered a new reachable node %for.body68.us
	discovered a new reachable node %for.inc77.us
	discovered a new reachable node %for.cond64.for.cond.cleanup67_crit_edge.us
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN12ILLIXR_AUDIO7ABAudioD2Ev.exit
	discovered a new reachable node %for.body.i
	discovered a new reachable node %lpad74.us-lcssa.us
	discovered a new reachable node %ehcleanup91
	discovered a new reachable node %if.end.i211
	discovered a new reachable node %_ZN12ILLIXR_AUDIO7ABAudioD2Ev.exit224
	discovered a new reachable node %ehcleanup100
	discovered a new reachable node %for.body.i223
	discovered a new reachable node %lpad60.us-lcssa.us
	discovered a new reachable node %for.body45
	discovered a new reachable node %for.cond.cleanup67
	discovered a new reachable node %lpad60.us-lcssa
	discovered a new reachable node %if.else
	discovered a new reachable node %lpad26
	discovered a new reachable node %lpad13
	discovered a new reachable node %lpad10
	discovered a new reachable node %lpad7
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit5
	discovered a new reachable node %if.then.i.i.i4
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i73
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then.i169
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148
	discovered a new reachable node %if.then.i147
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i154
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i161
	discovered a new reachable node %vector.ph266
	discovered a new reachable node %middle.block263.unr-lcssa
	discovered a new reachable node %middle.block263
	discovered a new reachable node %vector.body262.epil
	discovered a new reachable node %vector.ph266.new
	discovered a new reachable node %vector.body262
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
	discovered a new reachable node %for.body.i.i196.preheader
	discovered a new reachable node %for.body.i.i196.preheader287
	discovered a new reachable node %for.body.i.i196
	discovered a new reachable node %vector.ph248
	discovered a new reachable node %middle.block245.unr-lcssa
	discovered a new reachable node %middle.block245
	discovered a new reachable node %vector.body244.epil
	discovered a new reachable node %vector.ph248.new
	discovered a new reachable node %vector.body244
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else
	discovered a new reachable node %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
	discovered a new reachable node %for.body.i.i.preheader
	discovered a new reachable node %for.body.i.i.preheader288
	discovered a new reachable node %for.body.i.i
	discovered a new reachable node %vector.ph230
	discovered a new reachable node %middle.block225.unr-lcssa
	discovered a new reachable node %middle.block225
	discovered a new reachable node %vector.body224.epil
	discovered a new reachable node %vector.ph230.new
	discovered a new reachable node %vector.body224
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i179
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader290
	discovered a new reachable node %for.body.i.i.i.i.i189
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry

GENHPVM PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end19
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else12
	discovered a new reachable node %return
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Locate __hpvm__init()
Initialize Timer Set
Inserting GV: i8**@hpvmTimerSet_GenHPVM = common global i8* null
TimerSetAddress =   %27 = call i8* @llvm_hpvm_initializeTimerSet()
Store Timer Address in Global variable:   store i8* %27, i8** @hpvmTimerSet_GenHPVM
Locate __hpvm__cleanup()
-------- Searching for launch sites ----------
Function: _ZNSt8ios_base4InitC1Ev
Erase 0 Statements:
Function: _ZNSt8ios_base4InitD1Ev
Erase 0 Statements:
Function: __cxa_atexit
Erase 0 Statements:
Function: _ZN14CAmbisonicBaseC2Ev
Erase 0 Statements:
Function: _ZN14CAmbisonicBase8GetOrderEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9GetHeightEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Erase 0 Statements:
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Erase 0 Statements:
Function: _Z17OrderToComponentsjb
Erase 0 Statements:
Function: _ZN8CBFormatC2Ev
Erase 0 Statements:
Function: _ZN8CBFormat14GetSampleCountEv
Erase 0 Statements:
Function: _ZN8CBFormat9ConfigureEjbj
Erase 0 Statements:
Function: llvm.lifetime.start.p0i8
Erase 0 Statements:
Function: llvm.memset.p0i8.i64
Erase 0 Statements:
Function: _Znam
Erase 0 Statements:
Function: llvm.lifetime.end.p0i8
Erase 0 Statements:
Function: _ZN8CBFormat5ResetEv
Erase 0 Statements:
Function: _ZN8CBFormat7RefreshEv
Erase 0 Statements:
Function: _ZN8CBFormat12InsertStreamEPfjj
Erase 0 Statements:
Function: llvm.memcpy.p0i8.p0i8.i64
Erase 0 Statements:
Function: _ZN8CBFormat13ExtractStreamEPfjj
Erase 0 Statements:
Function: _ZN8CBFormataSERKS_
Erase 0 Statements:
Function: _ZN8CBFormateqERKS_
Erase 0 Statements:
Function: _ZN8CBFormatneERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmIERKS_
Erase 0 Statements:
Function: _ZN8CBFormatmLERKS_
Erase 0 Statements:
Function: _ZN8CBFormatdVERKS_
Erase 0 Statements:
Function: _ZN8CBFormatpLERKf
Erase 0 Statements:
Function: _ZN8CBFormatmIERKf
Erase 0 Statements:
Function: _ZN8CBFormatmLERKf
Erase 0 Statements:
Function: _ZN8CBFormatdVERKf
Erase 0 Statements:
Function: _ZN16CAmbisonicSourceC2Ev
Erase 0 Statements:
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource5ResetEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7RefreshEv
Erase 0 Statements:
Function: cosf
Erase 0 Statements:
Function: sinf
Erase 0 Statements:
Function: powf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Erase 0 Statements:
Function: _ZN16CAmbisonicSource11GetPositionEv
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7SetGainEf
Erase 0 Statements:
Function: _ZN16CAmbisonicSource7GetGainEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderC2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD2Ev
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoderD0Ev
Erase 0 Statements:
Function: _ZdlPv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7RefreshEv
Erase 0 Statements:
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistC2Ev
Erase 0 Statements:
Function: __gxx_personality_v0
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD2Ev
Erase 0 Statements:
Function: _ZdaPv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDistD0Ev
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Erase 0 Statements:
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Erase 0 Statements:
Function: _Znwm
Erase 0 Statements:
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZNSi4readEPcl
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Erase 0 Statements:
Function: __clang_call_terminate
Erase 0 Statements:
Function: __cxa_begin_catch
Erase 0 Statements:
Function: _ZSt9terminatev
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Erase 0 Statements:
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Erase 0 Statements:
Function: free
Erase 0 Statements:
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Erase 0 Statements:
Function: _ZNSo5writeEPKcl
Erase 0 Statements:
Function: normalization_fxp
Set preferred target for normalization_fxp: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #23
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @normalization_fxp(%"class.std::vector.6"* %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #23
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23
  %call = tail call i8* @__hpvm__getNode() #23
  %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call) #23
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call) #23
  %cmp = icmp slt i64 %call1, %soundSrcsSize
  %cmp3 = icmp slt i64 %call2, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call1
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call2
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call2
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23
  ret void
}

	Num of in pointers = 1
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @normalization_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #23
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #23
  %call = tail call i8* @__hpvm__getNode() #23
  %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call) #23
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call) #23
  %cmp = icmp slt i64 %call1, %soundSrcsSize
  %cmp3 = icmp slt i64 %call2, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call1
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call2
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call2
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #23
  ret void
}

Found call:   %call = tail call i8* @__hpvm__getNode() #23

; Function Attrs: nounwind readnone
declare i8* @llvm.hpvm.getNode() #23

	Substitute with:   %call3 = call i8* @llvm.hpvm.getNode()
Found call:   %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call3) #24

; Function Attrs: nounwind readnone
declare i64 @llvm.hpvm.getNodeInstanceID.x(i8*) #23

	Substitute with:   %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
Found call:   %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call3) #24

; Function Attrs: nounwind readnone
declare i64 @llvm.hpvm.getNodeInstanceID.y(i8*) #23

	Substitute with:   %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @normalization_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %call3 = call i8* @llvm.hpvm.getNode()
  %call = tail call i8* @__hpvm__getNode() #24
  %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
  %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call3) #24
  %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call3) #24
  %cmp = icmp slt i64 %call14, %soundSrcsSize
  %cmp3 = icmp slt i64 %call25, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call14
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call25
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call25
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret void
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
Found return statement of BB:   ret void
	Substitute return with:   ret %struct.out.normalization_fxp %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @normalization_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %call3 = call i8* @llvm.hpvm.getNode()
  %call = tail call i8* @__hpvm__getNode() #24
  %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
  %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call3) #24
  %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call3) #24
  %cmp = icmp slt i64 %call14, %soundSrcsSize
  %cmp3 = icmp slt i64 %call25, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call14
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call25
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call25
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret %struct.out.normalization_fxp %returnStruct
}

Erase 6 Statements:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %call = tail call i8* @__hpvm__getNode() #24
  %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call3) #24
  %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call3) #24
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
	Erasing   %call2 = tail call i64 @__hpvm__getNodeInstanceID_y(i8* %call3) #24
	Erasing   %call1 = tail call i64 @__hpvm__getNodeInstanceID_x(i8* %call3) #24
	Erasing   %call = tail call i8* @__hpvm__getNode() #24
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
	Erasing   tail call void @__hpvm__hint(i32 1) #24
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @normalization_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  %call3 = call i8* @llvm.hpvm.getNode()
  %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
  %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
  %cmp = icmp slt i64 %call14, %soundSrcsSize
  %cmp3 = icmp slt i64 %call25, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call14
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call25
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call25
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.normalization_fxp %returnStruct
}

Return type value: %struct.out.normalization_fxp = type <{ i64 }>
Cloning Function: normalization_fxp
Old Function Type: void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)
New Function Type: %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)
Old Function name: normalization_fxp
New Function name: normalization_fxp_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.std::vector.6"* %soundSrcs : %"class.std::vector.6"* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i64 %nSamples : i64 %0
3. i64 %soundSrcsSize : i64 %0
4. i16* %sampleTemp : i16* %0
5. i64 %bytes_sampleTemp : i64 %0

; Function Attrs: nounwind uwtable
define %struct.out.normalization_fxp @normalization_fxp_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  %call3 = call i8* @llvm.hpvm.getNode()
  %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
  %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
  %cmp = icmp slt i64 %call14, %soundSrcsSize
  %cmp3 = icmp slt i64 %call25, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call14
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call25
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !177
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call25
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.normalization_fxp %returnStruct
}

Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.lifetime.start.p0i8
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: llvm.lifetime.end.p0i8
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: __gxx_personality_v0
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _Znwm
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: free
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZNSo5writeEPKcl
Function: normalization_fxp
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__getNode
Function: __hpvm__getNodeInstanceID_x
Function: __hpvm__getNodeInstanceID_y
Function: __hpvm__return
Function: encoder_fxp
Function: sumBF_fxp
Function: encoderPipeline
Fixing use:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp, i64 %soundSrcsSize, i64 %nSamples) #24
in function: encoderPipeline
Fixed use:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: __hpvm__bindOut
Function: main
Function: __hpvm__init
Function: malloc
Function: __hpvm__launch
Function: llvm_hpvm_track_mem
Function: __hpvm__push
Function: __hpvm__pop
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__wait
Function: __hpvm__cleanup
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN8CBFormatD2Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: strtol
Function: llvm.trap
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt20__throw_length_errorPKc
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: strlen
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _GLOBAL__sub_I_main.cpp
Function: llvm.fabs.f32
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: llvm.hpvm.getNode
Function: llvm.hpvm.getNodeInstanceID.x
Function: llvm.hpvm.getNodeInstanceID.y
Function: normalization_fxp_cloned
Associated Metadata: <0x6f69d78> = !{void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp}
New Metadata: <0x74408f8> = !{%struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp_cloned}
DONE: Replacing function normalization_fxp with normalization_fxp_cloned
Function after fixing return type

; Function Attrs: nounwind uwtable
define %struct.out.normalization_fxp @normalization_fxp_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readonly %sampleTemp, i64 %bytes_sampleTemp) #6 {
entry:
  %call3 = call i8* @llvm.hpvm.getNode()
  %call14 = call i64 @llvm.hpvm.getNodeInstanceID.x(i8* %call3)
  %call25 = call i64 @llvm.hpvm.getNodeInstanceID.y(i8* %call3)
  %cmp = icmp slt i64 %call14, %soundSrcsSize
  %cmp3 = icmp slt i64 %call25, %nSamples
  %or.cond = and i1 %cmp, %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !168
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %call14
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !27
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 5
  %2 = load float, float* %amp, align 4, !tbaa !130
  %conv = fpext float %2 to double
  %arrayidx = getelementptr inbounds i16, i16* %sampleTemp, i64 %call25
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !207
  %conv6 = sitofp i16 %3 to double
  %div = fdiv double %conv6, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv7 = fptrunc double %mul to float
  %arrayidx9 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 %call25
  store float %conv7, float* %arrayidx9, align 4, !tbaa !30
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %returnStruct = insertvalue %struct.out.normalization_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.normalization_fxp %returnStruct
}

Function: __hpvm__hint
Erase 0 Statements:
Function: __hpvm__attributes
Erase 0 Statements:
Function: __hpvm__getNode
Erase 0 Statements:
Function: __hpvm__getNodeInstanceID_x
Erase 0 Statements:
Function: __hpvm__getNodeInstanceID_y
Erase 0 Statements:
Function: __hpvm__return
Erase 0 Statements:
Function: encoder_fxp
Set preferred target for encoder_fxp: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #24
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @encoder_fxp(%"class.std::vector.6"* %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

	Num of in pointers = 1
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @encoder_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @encoder_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
Found return statement of BB:   ret void
	Substitute return with:   ret %struct.out.encoder_fxp %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @encoder_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
  ret %struct.out.encoder_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

Erase 3 Statements:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #24
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 1, %"class.std::vector.6"* %soundSrcs, i32 1, %"class.std::vector.6"* %soundSrcs) #24
	Erasing   tail call void @__hpvm__hint(i32 1) #24
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @encoder_fxp(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.encoder_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

Return type value: %struct.out.encoder_fxp = type <{ i64 }>
Cloning Function: encoder_fxp
Old Function Type: void (%"class.std::vector.6"*, i64, i64, i64)
New Function Type: %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)
Old Function name: encoder_fxp
New Function name: encoder_fxp_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.std::vector.6"* %soundSrcs : %"class.std::vector.6"* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i64 %nSamples : i64 %0
3. i64 %soundSrcsSize : i64 %0

; Function Attrs: nounwind uwtable
define %struct.out.encoder_fxp @encoder_fxp_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.encoder_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.lifetime.start.p0i8
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: llvm.lifetime.end.p0i8
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: __gxx_personality_v0
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _Znwm
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: free
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZNSo5writeEPKcl
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__getNode
Function: __hpvm__getNodeInstanceID_x
Function: __hpvm__getNodeInstanceID_y
Function: __hpvm__return
Function: encoder_fxp
Function: sumBF_fxp
Function: encoderPipeline
Fixing use:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp) #24
in function: encoderPipeline
Fixed use:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: __hpvm__bindOut
Function: main
Function: __hpvm__init
Function: malloc
Function: __hpvm__launch
Function: llvm_hpvm_track_mem
Function: __hpvm__push
Function: __hpvm__pop
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__wait
Function: __hpvm__cleanup
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN8CBFormatD2Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: strtol
Function: llvm.trap
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt20__throw_length_errorPKc
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: strlen
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _GLOBAL__sub_I_main.cpp
Function: llvm.fabs.f32
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: llvm.hpvm.getNode
Function: llvm.hpvm.getNodeInstanceID.x
Function: llvm.hpvm.getNodeInstanceID.y
Function: normalization_fxp_cloned
Function: encoder_fxp_cloned
Associated Metadata: <0x6ed77d8> = !{void (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp}
New Metadata: <0x6f83648> = !{%struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp_cloned}
DONE: Replacing function encoder_fxp with encoder_fxp_cloned
Function after fixing return type

; Function Attrs: nounwind uwtable
define %struct.out.encoder_fxp @encoder_fxp_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize) #6 {
entry:
  %cmp20 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %conv4 = trunc i64 %nSamples to i32
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.encoder_fxp undef, i64 %bytes_soundSrcs, 0
  ret %struct.out.encoder_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %0 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !169
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %0, i64 %indvars.iv
  %1 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !28
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 3
  %2 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !135
  %arraydecay = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %1, i64 0, i32 2
  %3 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !134
  tail call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %2, float* nonnull %arraydecay, i32 %conv4, %class.CBFormat* %3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

Function: sumBF_fxp
Set preferred target for sumBF_fxp: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #24
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @sumBF_fxp(%"class.std::vector.6"* %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
  ret void

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

	Num of in pointers = 2
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @sumBF_fxp(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
  ret void

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @sumBF_fxp(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
  ret void

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
Found return statement of BB:   ret void
	Substitute return with:   ret %struct.out.sumBF_fxp %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @sumBF_fxp(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
  ret %struct.out.sumBF_fxp %returnStruct

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

Erase 3 Statements:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_sumBF) #24
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 1, %class.CBFormat* %sumBF) #24
	Erasing   tail call void @__hpvm__hint(i32 1) #24
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @sumBF_fxp(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.sumBF_fxp %returnStruct

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

Return type value: %struct.out.sumBF_fxp = type <{ i64 }>
Cloning Function: sumBF_fxp
Old Function Type: void (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)
New Function Type: %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)
Old Function name: sumBF_fxp
New Function name: sumBF_fxp_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.std::vector.6"* %soundSrcs : %"class.std::vector.6"* %0
1. i64 %bytes_soundSrcs : i64 %0
2. %class.CBFormat* %sumBF : %class.CBFormat* %0
3. i64 %bytes_sumBF : i64 %0
4. i64 %soundSrcsSize : i64 %0

; Function Attrs: nounwind uwtable
define %struct.out.sumBF_fxp @sumBF_fxp_cloned(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.sumBF_fxp %returnStruct

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !179
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !179
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !179
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !179
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !184

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !179
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !179
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !182, !noalias !179
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !185

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !186

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.lifetime.start.p0i8
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: llvm.lifetime.end.p0i8
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: __gxx_personality_v0
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _Znwm
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: free
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZNSo5writeEPKcl
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__getNode
Function: __hpvm__getNodeInstanceID_x
Function: __hpvm__getNodeInstanceID_y
Function: __hpvm__return
Function: sumBF_fxp
Function: encoderPipeline
Fixing use:   %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp) #24
in function: encoderPipeline
Fixed use:   %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: __hpvm__bindOut
Function: main
Function: __hpvm__init
Function: malloc
Function: __hpvm__launch
Function: llvm_hpvm_track_mem
Function: __hpvm__push
Function: __hpvm__pop
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__wait
Function: __hpvm__cleanup
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN8CBFormatD2Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: strtol
Function: llvm.trap
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt20__throw_length_errorPKc
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: strlen
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _GLOBAL__sub_I_main.cpp
Function: llvm.fabs.f32
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: llvm.hpvm.getNode
Function: llvm.hpvm.getNodeInstanceID.x
Function: llvm.hpvm.getNodeInstanceID.y
Function: normalization_fxp_cloned
Function: encoder_fxp_cloned
Function: sumBF_fxp_cloned
Associated Metadata: <0x6f82c88> = !{void (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp}
New Metadata: <0x7442da8> = !{%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned}
DONE: Replacing function sumBF_fxp with sumBF_fxp_cloned
Function after fixing return type

; Function Attrs: nounwind uwtable
define %struct.out.sumBF_fxp @sumBF_fxp_cloned(%"class.std::vector.6"* in %soundSrcs, i64 %bytes_soundSrcs, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i64 %soundSrcsSize) #6 {
entry:
  %cmp9 = icmp sgt i64 %soundSrcsSize, 0
  br i1 %cmp9, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  %_M_start.i = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %soundSrcs, i64 0, i32 0, i32 0, i32 0
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %_M_head_impl.i.i.i.i.i.i21.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %0, align 8, !tbaa !15
  %cmp25.i = icmp eq i32 %.pre, 0
  %1 = zext i32 %.pre to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN8CBFormatpLERKS_.exit, %entry
  %returnStruct = insertvalue %struct.out.sumBF_fxp undef, i64 %bytes_sumBF, 0
  ret %struct.out.sumBF_fxp %returnStruct

for.body:                                         ; preds = %_ZN8CBFormatpLERKS_.exit, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN8CBFormatpLERKS_.exit ]
  br i1 %cmp25.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.lr.ph.i

for.cond2.preheader.lr.ph.i:                      ; preds = %for.body
  %2 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !170
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %2, i64 %indvars.iv
  %3 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !29
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %3, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !135
  %5 = load i32, i32* %m_nSamples.i, align 8, !tbaa !18
  %cmp323.i = icmp eq i32 %5, 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %6 = load float**, float*** %_M_head_impl.i.i.i.i.i.i.i, align 8
  br i1 %cmp323.i, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.preheader.i

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %.pre.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i21.i, align 8, !tbaa !29
  %7 = zext i32 %5 to i64
  %8 = and i64 %7, 4294967288
  %9 = add nsw i64 %8, -8
  %10 = lshr exact i64 %9, 3
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %5, 8
  %n.vec = and i64 %7, 4294967288
  %xtraiter = and i64 %11, 1
  %12 = icmp eq i64 %9, 0
  %unroll_iter = sub nuw nsw i64 %11, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n = icmp eq i64 %n.vec, %7
  %xtraiter21 = and i64 %7, 3
  %lcmp.mod22 = icmp eq i64 %xtraiter21, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv29.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next30.i, %for.cond2.for.inc10_crit_edge.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float*, float** %6, i64 %indvars.iv29.i
  %13 = load float*, float** %arrayidx.i.us.i, align 8, !tbaa !29
  %arrayidx.i22.us.i = getelementptr inbounds float*, float** %.pre.i, i64 %indvars.iv29.i
  %14 = load float*, float** %arrayidx.i22.us.i, align 8, !tbaa !29
  br i1 %min.iters.check, label %for.body4.us.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.cond2.preheader.us.i
  %scevgep = getelementptr float, float* %14, i64 %7
  %scevgep15 = getelementptr float, float* %13, i64 %7
  %bound0 = icmp ult float* %14, %scevgep15
  %bound1 = icmp ult float* %13, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.us.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  br i1 %12, label %middle.block.unr-lcssa, label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ %index.next.1, %vector.body ], [ 0, %vector.ph ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body ], [ %unroll_iter, %vector.ph ]
  %15 = getelementptr inbounds float, float* %13, i64 %index
  %16 = bitcast float* %15 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %16, align 4, !tbaa !32, !alias.scope !202
  %17 = getelementptr inbounds float, float* %15, i64 4
  %18 = bitcast float* %17 to <4 x float>*
  %wide.load18 = load <4 x float>, <4 x float>* %18, align 4, !tbaa !32, !alias.scope !202
  %19 = getelementptr inbounds float, float* %14, i64 %index
  %20 = bitcast float* %19 to <4 x float>*
  %wide.load19 = load <4 x float>, <4 x float>* %20, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %21 = getelementptr inbounds float, float* %19, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  %wide.load20 = load <4 x float>, <4 x float>* %22, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %23 = fadd <4 x float> %wide.load, %wide.load19
  %24 = fadd <4 x float> %wide.load18, %wide.load20
  %25 = bitcast float* %19 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %26 = bitcast float* %21 to <4 x float>*
  store <4 x float> %24, <4 x float>* %26, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %index.next = or i64 %index, 8
  %27 = getelementptr inbounds float, float* %13, i64 %index.next
  %28 = bitcast float* %27 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %28, align 4, !tbaa !32, !alias.scope !202
  %29 = getelementptr inbounds float, float* %27, i64 4
  %30 = bitcast float* %29 to <4 x float>*
  %wide.load18.1 = load <4 x float>, <4 x float>* %30, align 4, !tbaa !32, !alias.scope !202
  %31 = getelementptr inbounds float, float* %14, i64 %index.next
  %32 = bitcast float* %31 to <4 x float>*
  %wide.load19.1 = load <4 x float>, <4 x float>* %32, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %33 = getelementptr inbounds float, float* %31, i64 4
  %34 = bitcast float* %33 to <4 x float>*
  %wide.load20.1 = load <4 x float>, <4 x float>* %34, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %35 = fadd <4 x float> %wide.load.1, %wide.load19.1
  %36 = fadd <4 x float> %wide.load18.1, %wide.load20.1
  %37 = bitcast float* %31 to <4 x float>*
  store <4 x float> %35, <4 x float>* %37, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %38 = bitcast float* %33 to <4 x float>*
  store <4 x float> %36, <4 x float>* %38, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !207

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %39 = getelementptr inbounds float, float* %13, i64 %index.unr
  %40 = bitcast float* %39 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %40, align 4, !tbaa !32, !alias.scope !202
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  %wide.load18.epil = load <4 x float>, <4 x float>* %42, align 4, !tbaa !32, !alias.scope !202
  %43 = getelementptr inbounds float, float* %14, i64 %index.unr
  %44 = bitcast float* %43 to <4 x float>*
  %wide.load19.epil = load <4 x float>, <4 x float>* %44, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %45 = getelementptr inbounds float, float* %43, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  %wide.load20.epil = load <4 x float>, <4 x float>* %46, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %47 = fadd <4 x float> %wide.load.epil, %wide.load19.epil
  %48 = fadd <4 x float> %wide.load18.epil, %wide.load20.epil
  %49 = bitcast float* %43 to <4 x float>*
  store <4 x float> %47, <4 x float>* %49, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  %50 = bitcast float* %45 to <4 x float>*
  store <4 x float> %48, <4 x float>* %50, align 4, !tbaa !32, !alias.scope !205, !noalias !202
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  br i1 %cmp.n, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i.preheader

for.body4.us.i.preheader:                         ; preds = %middle.block, %vector.memcheck, %for.cond2.preheader.us.i
  %indvars.iv.i.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.cond2.preheader.us.i ], [ %n.vec, %middle.block ]
  %51 = xor i64 %indvars.iv.i.ph, -1
  %52 = add nsw i64 %51, %7
  br i1 %lcmp.mod22, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ], [ %indvars.iv.i.ph, %for.body4.us.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body4.us.i.prol ], [ %xtraiter21, %for.body4.us.i.preheader ]
  %arrayidx.us.i.prol = getelementptr inbounds float, float* %13, i64 %indvars.iv.i.prol
  %53 = load float, float* %arrayidx.us.i.prol, align 4, !tbaa !32
  %arrayidx9.us.i.prol = getelementptr inbounds float, float* %14, i64 %indvars.iv.i.prol
  %54 = load float, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %add.us.i.prol = fadd float %53, %54
  store float %add.us.i.prol, float* %arrayidx9.us.i.prol, align 4, !tbaa !32
  %indvars.iv.next.i.prol = add nuw nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !llvm.loop !208

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %55 = icmp ult i64 %52, 3
  br i1 %55, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i

for.body4.us.i:                                   ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
  %arrayidx.us.i = getelementptr inbounds float, float* %13, i64 %indvars.iv.i
  %56 = load float, float* %arrayidx.us.i, align 4, !tbaa !32
  %arrayidx9.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv.i
  %57 = load float, float* %arrayidx9.us.i, align 4, !tbaa !32
  %add.us.i = fadd float %56, %57
  store float %add.us.i, float* %arrayidx9.us.i, align 4, !tbaa !32
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i
  %58 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !32
  %arrayidx9.us.i.1 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i
  %59 = load float, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %add.us.i.1 = fadd float %58, %59
  store float %add.us.i.1, float* %arrayidx9.us.i.1, align 4, !tbaa !32
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.1
  %60 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !32
  %arrayidx9.us.i.2 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.1
  %61 = load float, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %add.us.i.2 = fadd float %60, %61
  store float %add.us.i.2, float* %arrayidx9.us.i.2, align 4, !tbaa !32
  %indvars.iv.next.i.2 = add nuw nsw i64 %indvars.iv.i, 3
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next.i.2
  %62 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !32
  %arrayidx9.us.i.3 = getelementptr inbounds float, float* %14, i64 %indvars.iv.next.i.2
  %63 = load float, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %add.us.i.3 = fadd float %62, %63
  store float %add.us.i.3, float* %arrayidx9.us.i.3, align 4, !tbaa !32
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %exitcond.3 = icmp eq i64 %indvars.iv.next.i.3, %7
  br i1 %exitcond.3, label %for.cond2.for.inc10_crit_edge.us.i, label %for.body4.us.i, !llvm.loop !209

for.cond2.for.inc10_crit_edge.us.i:               ; preds = %for.body4.us.i, %for.body4.us.i.prol.loopexit, %middle.block
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond12 = icmp eq i64 %indvars.iv.next30.i, %1
  br i1 %exitcond12, label %_ZN8CBFormatpLERKS_.exit, label %for.cond2.preheader.us.i

_ZN8CBFormatpLERKS_.exit:                         ; preds = %for.cond2.for.inc10_crit_edge.us.i, %for.cond2.preheader.lr.ph.i, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond13 = icmp eq i64 %indvars.iv.next, %soundSrcsSize
  br i1 %exitcond13, label %for.cond.cleanup, label %for.body
}

Function: encoderPipeline
Set preferred target for encoderPipeline: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #24
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @encoderPipeline(%"class.std::vector.6"* %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readnone %sampleTemp, i64 %bytes_sampleTemp, %class.CBFormat* %sumBF, i64 %bytes_sumBF) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF) #24
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
  %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 0, i32 0, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 1, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 4, i32 4, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 5, i32 5, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 0, i32 0, i32 1) #24
  %call3 = tail call i8* @__hpvm__edge(i8* %call, i8* %call1, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 0, i32 0, i32 1) #24
  %call4 = tail call i8* @__hpvm__edge(i8* %call1, i8* %call2, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 6, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 7, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 3, i32 4, i32 1) #24
  tail call void @__hpvm__bindOut(i8* %call2, i32 0, i32 0, i32 1) #24
  ret void
}

	Num of in pointers = 2
	Num of out Pointers = 2
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @encoderPipeline(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readnone %sampleTemp, i64 %bytes_sampleTemp, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF) #6 {
entry:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF) #24
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
  %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 0, i32 0, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 1, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 4, i32 4, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call, i32 5, i32 5, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 0, i32 0, i32 1) #24
  %call3 = tail call i8* @__hpvm__edge(i8* %call, i8* %call1, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call1, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 0, i32 0, i32 1) #24
  %call4 = tail call i8* @__hpvm__edge(i8* %call1, i8* %call2, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 6, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 7, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %call2, i32 3, i32 4, i32 1) #24
  tail call void @__hpvm__bindOut(i8* %call2, i32 0, i32 0, i32 1) #24
  ret void
}


; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode2D(i8*, i64, i64) #24

  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
in encoderPipeline
Transforming return type of function to Struct: normalization_fxp_cloned
Return type is already a Struct: normalization_fxp_cloned: %struct.out.normalization_fxp = type <{ i64 }>
Found hpvm createNode call:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
	Substitute with:   %normalization_fxp_cloned.node = call i8* @llvm.hpvm.createNode2D(i8* bitcast (%struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp_cloned to i8*), i64 %soundSrcsSize, i64 %nSamples)

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
in encoderPipeline
Transforming return type of function to Struct: encoder_fxp_cloned
Return type is already a Struct: encoder_fxp_cloned: %struct.out.encoder_fxp = type <{ i64 }>
Found hpvm createNode call:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
	Substitute with:   %encoder_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp_cloned to i8*))

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

  %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
in encoderPipeline
Transforming return type of function to Struct: sumBF_fxp_cloned
Return type is already a Struct: sumBF_fxp_cloned: %struct.out.sumBF_fxp = type <{ i64 }>
Found hpvm createNode call:   %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
	Substitute with:   %sumBF_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned to i8*))

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i1 true)

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

Found hpvm edge call:   %call3 = tail call i8* @__hpvm__edge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
	Substitute with:   %output = call i8* @llvm.hpvm.createEdge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

Found hpvm edge call:   %call4 = tail call i8* @__hpvm__edge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
	Substitute with:   %output1 = call i8* @llvm.hpvm.createEdge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i1 true)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.output(i8*, i32, i32, i1) #24

Found hpvm bindOut call:   tail call void @__hpvm__bindOut(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Substitute with:   call void @llvm.hpvm.bind.output(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
Fixing the return type of the function
encoderPipeline
Node intrinsic:   %sumBF_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned to i8*))
sumBF_fxp_cloned
void
Erase 21 Statements:
  tail call void @__hpvm__hint(i32 1) #24
  tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF) #24
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
  %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i32 1) #24
  %call3 = tail call i8* @__hpvm__edge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
  %call4 = tail call i8* @__hpvm__edge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i32 1) #24
  tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i32 1) #24
  tail call void @__hpvm__bindOut(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Erasing   tail call void @__hpvm__bindOut(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i32 1) #24
	Erasing   %call4 = tail call i8* @__hpvm__edge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i32 1) #24
	Erasing   %call3 = tail call i8* @__hpvm__edge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i32 1, i32 0, i32 1, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i32 1) #24
	Erasing   tail call void @__hpvm__bindIn(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i32 1) #24
	Erasing   %call2 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* nonnull @sumBF_fxp_cloned) #24
	Erasing   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* nonnull @encoder_fxp_cloned) #24
	Erasing   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 2, %struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* nonnull @normalization_fxp_cloned, i64 %soundSrcsSize, i64 %nSamples) #24
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF, i32 2, %"class.std::vector.6"* %soundSrcs, %class.CBFormat* %sumBF) #24
	Erasing   tail call void @__hpvm__hint(i32 1) #24
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @encoderPipeline(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readnone %sampleTemp, i64 %bytes_sampleTemp, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF) #6 {
entry:
  %normalization_fxp_cloned.node = call i8* @llvm.hpvm.createNode2D(i8* bitcast (%struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp_cloned to i8*), i64 %soundSrcsSize, i64 %nSamples)
  %encoder_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp_cloned to i8*))
  %sumBF_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output = call i8* @llvm.hpvm.createEdge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i1 true)
  call void @llvm.hpvm.bind.output(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  ret void
}

Cloning Function: encoderPipeline
Old Function Type: void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)
New Function Type: %struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)
Old Function name: encoderPipeline
New Function name: encoderPipeline_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. %"class.std::vector.6"* %soundSrcs : %"class.std::vector.6"* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i64 %nSamples : i64 %0
3. i64 %soundSrcsSize : i64 %0
4. i16* %sampleTemp : i16* %0
5. i64 %bytes_sampleTemp : i64 %0
6. %class.CBFormat* %sumBF : %class.CBFormat* %0
7. i64 %bytes_sumBF : i64 %0

; Function Attrs: nounwind uwtable
define %struct.out.encoderPipeline @encoderPipeline_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readnone %sampleTemp, i64 %bytes_sampleTemp, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF) #6 {
entry:
  %normalization_fxp_cloned.node = call i8* @llvm.hpvm.createNode2D(i8* bitcast (%struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp_cloned to i8*), i64 %soundSrcsSize, i64 %nSamples)
  %encoder_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp_cloned to i8*))
  %sumBF_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output = call i8* @llvm.hpvm.createEdge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i1 true)
  call void @llvm.hpvm.bind.output(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  ret void
}

Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _ZN14CAmbisonicBaseC2Ev
Function: _ZN14CAmbisonicBase8GetOrderEv
Function: _ZN14CAmbisonicBase9GetHeightEv
Function: _ZN14CAmbisonicBase15GetChannelCountEv
Function: _ZN14CAmbisonicBase9ConfigureEjbj
Function: _Z17OrderToComponentsjb
Function: _ZN8CBFormatC2Ev
Function: _ZN8CBFormat14GetSampleCountEv
Function: _ZN8CBFormat9ConfigureEjbj
Function: llvm.lifetime.start.p0i8
Function: llvm.memset.p0i8.i64
Function: _Znam
Function: llvm.lifetime.end.p0i8
Function: _ZN8CBFormat5ResetEv
Function: _ZN8CBFormat7RefreshEv
Function: _ZN8CBFormat12InsertStreamEPfjj
Function: llvm.memcpy.p0i8.p0i8.i64
Function: _ZN8CBFormat13ExtractStreamEPfjj
Function: _ZN8CBFormataSERKS_
Function: _ZN8CBFormateqERKS_
Function: _ZN8CBFormatneERKS_
Function: _ZN8CBFormatpLERKS_
Function: _ZN8CBFormatmIERKS_
Function: _ZN8CBFormatmLERKS_
Function: _ZN8CBFormatdVERKS_
Function: _ZN8CBFormatpLERKf
Function: _ZN8CBFormatmIERKf
Function: _ZN8CBFormatmLERKf
Function: _ZN8CBFormatdVERKf
Function: _ZN16CAmbisonicSourceC2Ev
Function: _ZN16CAmbisonicSource9ConfigureEjbj
Function: _ZN16CAmbisonicSource5ResetEv
Function: _ZN16CAmbisonicSource7RefreshEv
Function: cosf
Function: sinf
Function: powf
Function: _ZN16CAmbisonicSource11SetPositionE10PolarPoint
Function: _ZN16CAmbisonicSource11GetPositionEv
Function: _ZN16CAmbisonicSource14SetOrderWeightEjf
Function: _ZN16CAmbisonicSource17SetOrderWeightAllEf
Function: _ZN16CAmbisonicSource14SetCoefficientEjf
Function: _ZN16CAmbisonicSource14GetOrderWeightEj
Function: _ZN16CAmbisonicSource14GetCoefficientEj
Function: _ZN16CAmbisonicSource7SetGainEf
Function: _ZN16CAmbisonicSource7GetGainEv
Function: _ZN17CAmbisonicEncoderC2Ev
Function: _ZN17CAmbisonicEncoderD2Ev
Function: _ZN17CAmbisonicEncoderD0Ev
Function: _ZdlPv
Function: _ZN17CAmbisonicEncoder9ConfigureEjbj
Function: _ZN17CAmbisonicEncoder7RefreshEv
Function: _ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDistC2Ev
Function: __gxx_personality_v0
Function: _ZN21CAmbisonicEncoderDistD2Ev
Function: _ZdaPv
Function: _ZN21CAmbisonicEncoderDistD0Ev
Function: _ZN21CAmbisonicEncoderDist9ConfigureEjbj
Function: _ZN21CAmbisonicEncoderDist5ResetEv
Function: _ZN21CAmbisonicEncoderDist7RefreshEv
Function: _ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat
Function: _ZN21CAmbisonicEncoderDist13SetRoomRadiusEf
Function: _ZN21CAmbisonicEncoderDist13GetRoomRadiusEv
Function: _ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
Function: _Znwm
Function: _ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZNSi4readEPcl
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint
Function: _ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf
Function: _ZN12ILLIXR_AUDIO5SoundD2Ev
Function: __clang_call_terminate
Function: __cxa_begin_catch
Function: _ZSt9terminatev
Function: _ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
Function: _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode
Function: _ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv
Function: _ZN12ILLIXR_AUDIO7ABAudioD2Ev
Function: free
Function: _ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv
Function: _ZNSo5writeEPKcl
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__getNode
Function: __hpvm__getNodeInstanceID_x
Function: __hpvm__getNodeInstanceID_y
Function: __hpvm__return
Function: encoderPipeline
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: __hpvm__bindOut
Function: main
%struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)*
void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)*
Function: __hpvm__init
Function: malloc
Function: __hpvm__launch
Function: llvm_hpvm_track_mem
Function: __hpvm__push
Function: __hpvm__pop
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__wait
Function: __hpvm__cleanup
Function: _ZN14CAmbisonicBaseD2Ev
Function: _ZN14CAmbisonicBaseD0Ev
Function: __cxa_pure_virtual
Function: _ZN8CBFormatD2Ev
Function: _ZN8CBFormatD0Ev
Function: _ZN16CAmbisonicSourceD2Ev
Function: _ZN16CAmbisonicSourceD0Ev
Function: strtol
Function: llvm.trap
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Function: _ZSt20__throw_length_errorPKc
Function: llvm.memmove.p0i8.p0i8.i64
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Function: strlen
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Function: _GLOBAL__sub_I_main.cpp
Function: llvm.fabs.f32
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: llvm.hpvm.getNode
Function: llvm.hpvm.getNodeInstanceID.x
Function: llvm.hpvm.getNodeInstanceID.y
Function: normalization_fxp_cloned
Function: encoder_fxp_cloned
Function: sumBF_fxp_cloned
Function: llvm.hpvm.createNode2D
Function: llvm.hpvm.createNode
Function: llvm.hpvm.bind.input
Function: llvm.hpvm.createEdge
Function: llvm.hpvm.bind.output
Function: encoderPipeline_cloned
Associated Metadata: <0x6f85608> = !{void (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* @encoderPipeline}
New Metadata: <0x6f07078> = !{%struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* @encoderPipeline_cloned}
DONE: Replacing function encoderPipeline with encoderPipeline_cloned
Function after fixing return type

; Function Attrs: nounwind uwtable
define %struct.out.encoderPipeline @encoderPipeline_cloned(%"class.std::vector.6"* in out %soundSrcs, i64 %bytes_soundSrcs, i64 %nSamples, i64 %soundSrcsSize, i16* nocapture readnone %sampleTemp, i64 %bytes_sampleTemp, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF) #6 {
entry:
  %normalization_fxp_cloned.node = call i8* @llvm.hpvm.createNode2D(i8* bitcast (%struct.out.normalization_fxp (%"class.std::vector.6"*, i64, i64, i64, i16*, i64)* @normalization_fxp_cloned to i8*), i64 %soundSrcsSize, i64 %nSamples)
  %encoder_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.encoder_fxp (%"class.std::vector.6"*, i64, i64, i64)* @encoder_fxp_cloned to i8*))
  %sumBF_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.sumBF_fxp (%"class.std::vector.6"*, i64, %class.CBFormat*, i64, i64)* @sumBF_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 0, i32 0, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 1, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 4, i32 4, i1 true)
  call void @llvm.hpvm.bind.input(i8* %normalization_fxp_cloned.node, i32 5, i32 5, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output = call i8* @llvm.hpvm.createEdge(i8* %normalization_fxp_cloned.node, i8* %encoder_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 2, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %encoder_fxp_cloned.node, i32 3, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %encoder_fxp_cloned.node, i8* %sumBF_fxp_cloned.node, i1 true, i32 0, i32 1, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 6, i32 2, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 7, i32 3, i1 true)
  call void @llvm.hpvm.bind.input(i8* %sumBF_fxp_cloned.node, i32 3, i32 4, i1 true)
  call void @llvm.hpvm.bind.output(i8* %sumBF_fxp_cloned.node, i32 0, i32 0, i1 true)
  ret %struct.out.encoderPipeline undef
}

Function: __hpvm__createNodeND
Erase 0 Statements:
Function: __hpvm__bindIn
Erase 0 Statements:
Function: __hpvm__edge
Erase 0 Statements:
Function: __hpvm__bindOut
Erase 0 Statements:
Function: main
Found call:   call void @__hpvm__init() #24

; Function Attrs: nounwind
declare void @llvm.hpvm.init() #24

	Substitute with:   call void @llvm.hpvm.init()

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #24

Transforming return type of function to Struct: encoderPipeline_cloned
Return type is already a Struct: encoderPipeline_cloned: %struct.out.encoderPipeline = type <{ i64 }>
Found hpvm launch call:   %call39 = call i8* (i32, ...) @__hpvm__launch(i32 1, %struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* nonnull @encoderPipeline_cloned, i8* %call21) #24
	Substitute with:   %graphID = call i8* @llvm.hpvm.launch(i8* bitcast (%struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* @encoderPipeline_cloned to i8*), i8* %call21, i1 true)
Found call:   call void @__hpvm__push(i8* %graphID, i8* %call21) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.push(i8*, i8*) #24

	Substitute with:   call void @llvm.hpvm.push(i8* %graphID, i8* %call21)
Found call:   %call53.us = call i8* @__hpvm__pop(i8* %graphID) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.pop(i8*) #24

	Substitute with:   %call53.us1 = call i8* @llvm.hpvm.pop(i8* %graphID)
Found call:   call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.push(i8*, i8*) #24

	Substitute with:   call void @llvm.hpvm.push(i8* %graphID, i8* %call21)
Found call:   %call53 = call i8* @__hpvm__pop(i8* %graphID) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.pop(i8*) #24

	Substitute with:   %call532 = call i8* @llvm.hpvm.pop(i8* %graphID)
Found call:   call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.push(i8*, i8*) #24

	Substitute with:   call void @llvm.hpvm.push(i8* %graphID, i8* %call21)
Found call:   %call87 = call i8* @__hpvm__pop(i8* %graphID) #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.pop(i8*) #24

	Substitute with:   %call873 = call i8* @llvm.hpvm.pop(i8* %graphID)
Found call:   call void @__hpvm__wait(i8* %graphID) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #24

	Substitute with:   call void @llvm.hpvm.wait(i8* %graphID)
Found call:   call void @__hpvm__cleanup() #24

; Function Attrs: nounwind
declare void @llvm.hpvm.cleanup() #24

	Substitute with:   call void @llvm.hpvm.cleanup()
Erase 10 Statements:
  call void @__hpvm__init() #24
  %call39 = call i8* (i32, ...) @__hpvm__launch(i32 1, %struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* nonnull @encoderPipeline_cloned, i8* %call21) #24
  call void @__hpvm__push(i8* %graphID, i8* %call21) #24
  %call53.us = call i8* @__hpvm__pop(i8* %graphID) #24
  call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24
  %call53 = call i8* @__hpvm__pop(i8* %graphID) #24
  call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24
  %call87 = call i8* @__hpvm__pop(i8* %graphID) #24
  call void @__hpvm__wait(i8* %graphID) #24
  call void @__hpvm__cleanup() #24
	Erasing   call void @__hpvm__cleanup() #24
	Erasing   call void @__hpvm__wait(i8* %graphID) #24
	Erasing   %call87 = call i8* @__hpvm__pop(i8* %graphID) #24
	Erasing   call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24
	Erasing   %call53 = call i8* @__hpvm__pop(i8* %graphID) #24
	Erasing   call void @__hpvm__push(i8* %graphID, i8* nonnull %call21) #24
	Erasing   %call53.us = call i8* @__hpvm__pop(i8* %graphID) #24
	Erasing   call void @__hpvm__push(i8* %graphID, i8* %call21) #24
	Erasing   %call39 = call i8* (i32, ...) @__hpvm__launch(i32 1, %struct.out.encoderPipeline (%"class.std::vector.6"*, i64, i64, i64, i16*, i64, %class.CBFormat*, i64)* nonnull @encoderPipeline_cloned, i8* %call21) #24
	Erasing   call void @__hpvm__init() #24
Function: __hpvm__init
Erase 0 Statements:
Function: malloc
Erase 0 Statements:
Function: __hpvm__launch
Erase 0 Statements:
Function: llvm_hpvm_track_mem
Erase 0 Statements:
Function: __hpvm__push
Erase 0 Statements:
Function: __hpvm__pop
Erase 0 Statements:
Function: llvm_hpvm_request_mem
Erase 0 Statements:
Function: llvm_hpvm_untrack_mem
Erase 0 Statements:
Function: __hpvm__wait
Erase 0 Statements:
Function: __hpvm__cleanup
Erase 0 Statements:
Function: _ZN14CAmbisonicBaseD2Ev
Erase 0 Statements:
Function: _ZN14CAmbisonicBaseD0Ev
Erase 0 Statements:
Function: __cxa_pure_virtual
Erase 0 Statements:
Function: _ZN8CBFormatD2Ev
Erase 0 Statements:
Function: _ZN8CBFormatD0Ev
Erase 0 Statements:
Function: _ZN16CAmbisonicSourceD2Ev
Erase 0 Statements:
Function: _ZN16CAmbisonicSourceD0Ev
Erase 0 Statements:
Function: strtol
Erase 0 Statements:
Function: llvm.trap
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE17_M_default_appendEm
Erase 0 Statements:
Function: _ZSt20__throw_length_errorPKc
Erase 0 Statements:
Function: llvm.memmove.p0i8.p0i8.i64
Erase 0 Statements:
Function: _ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf
Erase 0 Statements:
Function: _ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
Erase 0 Statements:
Function: _ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
Erase 0 Statements:
Function: _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
Erase 0 Statements:
Function: strlen
Erase 0 Statements:
Function: _ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
Erase 0 Statements:
Function: _GLOBAL__sub_I_main.cpp
Erase 0 Statements:
Function: llvm.fabs.f32
Erase 0 Statements:
Function: llvm_hpvm_initializeTimerSet
Erase 0 Statements:
Function: llvm_hpvm_switchToTimer
Erase 0 Statements:
Function: llvm_hpvm_printTimerSet
Erase 0 Statements:
Optimizing Global Constructor: 
; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #5 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #24
  ret void
}

	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEm.exit
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
	discovered a new reachable node %cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %cleanup.loopexit.unr-lcssa
	discovered a new reachable node %for.body.epil
	discovered a new reachable node %for.body.lr.ph.new
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then5.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %land.lhs.true7
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.lhs.false7
	discovered a new reachable node %return
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end12
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %for.end7
	discovered a new reachable node %for.cond2.preheader.lr.ph
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.cond2.for.inc5_crit_edge.us
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
	discovered a new reachable node %if.then.i11
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16
	discovered a new reachable node %if.else.i13
	discovered a new reachable node %if.then9.i15
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.then9.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then211
	discovered a new reachable node %if.end277
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %if.end232
	discovered a new reachable node %if.end250
	discovered a new reachable node %if.then253
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end45
	discovered a new reachable node %if.end104
	discovered a new reachable node %if.then107
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
	discovered a new reachable node %if.then.i11.i
	discovered a new reachable node %_ZN16CAmbisonicSource9ConfigureEjbj.exit
	discovered a new reachable node %if.else.i13.i
	discovered a new reachable node %if.then9.i15.i
	discovered a new reachable node %if.else.i.i
	discovered a new reachable node %if.then9.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.end11
	discovered a new reachable node %for.cond2.preheader.us.preheader
	discovered a new reachable node %for.cond2.preheader.us
	discovered a new reachable node %for.body4.us.preheader
	discovered a new reachable node %for.body4.us.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc9_crit_edge.us
	discovered a new reachable node %for.body4.us
	discovered a new reachable node %for.body4.us.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.i.i.noexc
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.end9.i
	discovered a new reachable node %call12.i.noexc
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %lpad
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoderD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i
	discovered a new reachable node %if.then.i.i.i.i.i
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i.i.i
	discovered a new reachable node %_ZN21CAmbisonicEncoderDistD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i
	discovered a new reachable node %delete.notnull.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
	discovered a new reachable node %if.then.i11.i.i
	discovered a new reachable node %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
	discovered a new reachable node %if.end9
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %if.else.i13.i.i
	discovered a new reachable node %if.then9.i15.i.i
	discovered a new reachable node %if.else.i.i.i
	discovered a new reachable node %if.then9.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %entry
	discovered a new reachable node %for.end44
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body.us.preheader
	discovered a new reachable node %for.body.us
	discovered a new reachable node %for.cond18.for.end_crit_edge.us.unr-lcssa
	discovered a new reachable node %for.cond18.for.end_crit_edge.us
	discovered a new reachable node %for.cond.for.end44_crit_edge
	discovered a new reachable node %for.body20.us.epil
	discovered a new reachable node %for.body20.us
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont15
	discovered a new reachable node %lpad14
	discovered a new reachable node %eh.resume
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %call.i.noexc
	discovered a new reachable node %if.then.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.end7
	discovered a new reachable node %delete.end12
	discovered a new reachable node %delete.notnull9
	discovered a new reachable node %delete.notnull4
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %terminate.lpad
	discovered a new reachable node %1
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %invoke.cont4
	discovered a new reachable node %if.end
	discovered a new reachable node %lpad
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %call5.i.i.i9.i.noexc
	discovered a new reachable node %invoke.cont3
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit66
	discovered a new reachable node %if.else.i
	discovered a new reachable node %invoke.cont.i.i
	discovered a new reachable node %invoke.cont8.i.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
	discovered a new reachable node %call5.i.i.i9.i.noexc79
	discovered a new reachable node %invoke.cont12
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit86
	discovered a new reachable node %if.else.i115
	discovered a new reachable node %invoke.cont.i.i129
	discovered a new reachable node %invoke.cont8.i.i134
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i137
	discovered a new reachable node %if.end.sink.split
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then.i63.i.i135
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i130
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i122
	discovered a new reachable node %if.then.i104
	discovered a new reachable node %if.then.i.i85
	discovered a new reachable node %lpad11
	discovered a new reachable node %ehcleanup52
	discovered a new reachable node %if.then.i.i147
	discovered a new reachable node %lpad9
	discovered a new reachable node %if.then.i63.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i
	discovered a new reachable node %if.then.i
	discovered a new reachable node %if.then.i.i65
	discovered a new reachable node %lpad2
	discovered a new reachable node %if.then.i.i142
	discovered a new reachable node %lpad
	discovered a new reachable node %for.cond.preheader
	discovered a new reachable node %for.body
	discovered a new reachable node %call5.i.i.i9.i.noexc161
	discovered a new reachable node %invoke.cont32
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	discovered a new reachable node %if.else.i197
	discovered a new reachable node %invoke.cont.i.i211
	discovered a new reachable node %invoke.cont8.i.i216
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i219
	discovered a new reachable node %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit220
	discovered a new reachable node %if.then.i63.i.i217
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i.i.i212
	discovered a new reachable node %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i204
	discovered a new reachable node %if.then.i186
	discovered a new reachable node %if.then.i.i167
	discovered a new reachable node %lpad31
	discovered a new reachable node %if.then.i.i
	discovered a new reachable node %lpad29
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then.i
	discovered a new reachable node %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	discovered a new reachable node %return
	discovered a new reachable node %if.else.i
	discovered a new reachable node %if.end
	discovered a new reachable node %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	discovered a new reachable node %invoke.cont11
	discovered a new reachable node %invoke.cont14
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.body45.lr.ph
	discovered a new reachable node %for.body45.us
	discovered a new reachable node %for.body68.us
	discovered a new reachable node %for.inc77.us
	discovered a new reachable node %for.cond64.for.cond.cleanup67_crit_edge.us
	discovered a new reachable node %if.end.i
	discovered a new reachable node %_ZN12ILLIXR_AUDIO7ABAudioD2Ev.exit
	discovered a new reachable node %for.body.i
	discovered a new reachable node %lpad74.us-lcssa.us
	discovered a new reachable node %ehcleanup91
	discovered a new reachable node %if.end.i211
	discovered a new reachable node %_ZN12ILLIXR_AUDIO7ABAudioD2Ev.exit224
	discovered a new reachable node %ehcleanup100
	discovered a new reachable node %for.body.i223
	discovered a new reachable node %lpad60.us-lcssa.us
	discovered a new reachable node %for.body45
	discovered a new reachable node %for.cond.cleanup67
	discovered a new reachable node %lpad60.us-lcssa
	discovered a new reachable node %if.else
	discovered a new reachable node %lpad26
	discovered a new reachable node %lpad13
	discovered a new reachable node %lpad10
	discovered a new reachable node %lpad7
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
	discovered a new reachable node %_ZN8CBFormatD2Ev.exit
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit5
	discovered a new reachable node %if.then.i.i.i4
	discovered a new reachable node %if.then.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %_ZNSt6vectorIfSaIfEED2Ev.exit.i
	discovered a new reachable node %_ZN16CAmbisonicSourceD2Ev.exit
	discovered a new reachable node %if.then.i.i.i4.i
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %entry
	discovered a new reachable node %if.end47
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then.i71
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %invoke.cont19
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74
	discovered a new reachable node %if.end47.sink.split
	discovered a new reachable node %if.then.i73
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
	discovered a new reachable node %entry
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then.i169
	discovered a new reachable node %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
	discovered a new reachable node %for.body.i.i.i.i.i.preheader
	discovered a new reachable node %for.body.i.i.i.i.i
	discovered a new reachable node %invoke.cont
	discovered a new reachable node %invoke.cont57
	discovered a new reachable node %invoke.cont64
	discovered a new reachable node %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148
	discovered a new reachable node %if.then.i147
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i154
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i161
	discovered a new reachable node %vector.ph266
	discovered a new reachable node %middle.block263.unr-lcssa
	discovered a new reachable node %middle.block263
	discovered a new reachable node %vector.body262.epil
	discovered a new reachable node %vector.ph266.new
	discovered a new reachable node %vector.body262
	discovered a new reachable node %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.then10
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
	discovered a new reachable node %for.body.i.i196.preheader
	discovered a new reachable node %for.body.i.i196.preheader287
	discovered a new reachable node %for.body.i.i196
	discovered a new reachable node %vector.ph248
	discovered a new reachable node %middle.block245.unr-lcssa
	discovered a new reachable node %middle.block245
	discovered a new reachable node %vector.body244.epil
	discovered a new reachable node %vector.ph248.new
	discovered a new reachable node %vector.body244
	discovered a new reachable node %if.then.i.i.i.i
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i
	discovered a new reachable node %if.else
	discovered a new reachable node %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
	discovered a new reachable node %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
	discovered a new reachable node %for.body.i.i.preheader
	discovered a new reachable node %for.body.i.i.preheader288
	discovered a new reachable node %for.body.i.i
	discovered a new reachable node %vector.ph230
	discovered a new reachable node %middle.block225.unr-lcssa
	discovered a new reachable node %middle.block225
	discovered a new reachable node %vector.body224.epil
	discovered a new reachable node %vector.ph230.new
	discovered a new reachable node %vector.body224
	discovered a new reachable node %if.then.i.i.i.i.i.i.i.i179
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader
	discovered a new reachable node %for.body.i.i.i.i.i189.preheader290
	discovered a new reachable node %for.body.i.i.i.i.i189
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.ph.new
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %entry
	discovered a new reachable node %for.body.lr.ph
	discovered a new reachable node %for.body
	discovered a new reachable node %_ZN8CBFormatpLERKS_.exit
	discovered a new reachable node %for.cond.cleanup
	discovered a new reachable node %for.cond2.preheader.lr.ph.i
	discovered a new reachable node %for.cond2.preheader.us.preheader.i
	discovered a new reachable node %for.cond2.preheader.us.i
	discovered a new reachable node %for.body4.us.i.preheader
	discovered a new reachable node %for.body4.us.i.prol.loopexit
	discovered a new reachable node %for.cond2.for.inc10_crit_edge.us.i
	discovered a new reachable node %for.body4.us.i
	discovered a new reachable node %for.body4.us.i.prol
	discovered a new reachable node %vector.memcheck
	discovered a new reachable node %vector.ph
	discovered a new reachable node %middle.block.unr-lcssa
	discovered a new reachable node %middle.block
	discovered a new reachable node %vector.body.epil
	discovered a new reachable node %vector.body
	discovered a new reachable node %entry
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -hpvm-timers-cpu -S build/seq/main.hpvm.ll -o build/seq/audioEncoding-seq.host.ll
Writing '/tmp/DataflowGraph-aea425.dot'...  done. 
opt: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:1582: virtual void {anonymous}::CGT_CPU::codeGen(llvm::DFLeafNode*): Assertion `(numParamsF_CPU - numParamsF == 6) && "Difference of arguments between function and its clone is not 6!"' failed.
Stack dump:
0.	Program arguments: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -hpvm-timers-cpu -S build/seq/main.hpvm.ll -o build/seq/audioEncoding-seq.host.ll 
1.	Running pass 'Unnamed pass: implement Pass::getPassName()' on module 'build/seq/main.hpvm.ll'.
 #0 0x0000000003067291 llvm::sys::PrintStackTrace(llvm::raw_ostream&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:533:0
 #1 0x0000000003067324 PrintStackTraceSignalHandler(void*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:594:0
 #2 0x00000000030651f8 llvm::sys::RunSignalHandlers() /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Signals.cpp:68:0
 #3 0x0000000003066c46 SignalHandler(int) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/Support/Unix/Signals.inc:385:0
 #4 0x00007f4c8fb68390 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x11390)
 #5 0x00007f4c8e8da438 raise /build/glibc-e6zv40/glibc-2.23/signal/../sysdeps/unix/sysv/linux/raise.c:54:0
 #6 0x00007f4c8e8dc03a abort /build/glibc-e6zv40/glibc-2.23/stdlib/abort.c:91:0
 #7 0x00007f4c8e8d2be7 __assert_fail_base /build/glibc-e6zv40/glibc-2.23/assert/assert.c:92:0
 #8 0x00007f4c8e8d2c92 (/lib/x86_64-linux-gnu/libc.so.6+0x2dc92)
 #9 0x00007f4c8e3f69d7 (anonymous namespace)::CGT_CPU::codeGen(llvm::DFLeafNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:1584:0
#10 0x00007f4c8e3fd335 dfg2llvm::CodeGenTraversal::visit(llvm::DFLeafNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFG2LLVM.h:156:0
#11 0x00007f4c8e669838 llvm::DFLeafNode::applyDFNodeVisitor(llvm::DFNodeVisitor&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFGraph.h:914:0
#12 0x00007f4c8e3fd1a4 dfg2llvm::CodeGenTraversal::visit(llvm::DFInternalNode*) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/./include/SupportHPVM/DFG2LLVM.h:139:0
#13 0x00007f4c8e3ed57c (anonymous namespace)::DFG2LLVM_CPU::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/hpvm/lib/Transforms/DFG2LLVM_CPU/DFG2LLVM_CPU.cpp:157:0
#14 0x000000000276b70b (anonymous namespace)::MPPassManager::runOnModule(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1750:0
#15 0x000000000276bead llvm::legacy::PassManagerImpl::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1863:0
#16 0x000000000276c0b3 llvm::legacy::PassManager::run(llvm::Module&) /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/lib/IR/LegacyPassManager.cpp:1895:0
#17 0x000000000183dba7 main /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/llvm/tools/opt/opt.cpp:892:0
#18 0x00007f4c8e8c5840 __libc_start_main /build/glibc-e6zv40/glibc-2.23/csu/../csu/libc-start.c:325:0
#19 0x00000000017ffb89 _start (/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt+0x17ffb89)
Makefile:115: recipe for target 'build/seq/audioEncoding-seq.host.ll' failed
make: *** [build/seq/audioEncoding-seq.host.ll] Aborted
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/audioEncodingNoPara[00m$ exit
exit

Script done on Sun 30 Aug 2020 04:28:41 PM CDT
