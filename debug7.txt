Script started on Wed 08 Jul 2020 01:24:25 PM CDT
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/apForFun[00m$ make TARGET=seq
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/clang -O3 -std=c++14 -Wall -fPIC -I./include -DDEVICE=CPU_TARGET -I./libspatialaudio/build/Debug/include -emit-llvm -S -o build/seq/main.ll src//main.cpp
[1msrc//main.cpp:698:5: [0m[0;1;35mwarning: [0m[1m'/*' within block comment [-Wcomment][0m
    /*
[0;1;32m    ^
[0m1 warning generated.
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll
Args: /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -debug -load LLVMGenHPVM.so -genhpvm -globaldce -hpvm-timers-gen build/seq/main.ll -S -o build/seq/main.hpvm.ll 
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry

GENHPVM PASS
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then6
	discovered a new reachable node %return
	discovered a new reachable node %if.end9
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.else26
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %if.end34
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then43
	discovered a new reachable node %if.then47
	discovered a new reachable node %if.end49
	discovered a new reachable node %if.then52
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.end57
	discovered a new reachable node %if.then61
	discovered a new reachable node %if.end63
	discovered a new reachable node %if.then66
	discovered a new reachable node %if.end70
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.end81
	discovered a new reachable node %if.then83
	discovered a new reachable node %if.else90
	discovered a new reachable node %if.else95
	discovered a new reachable node %if.end102
	discovered a new reachable node %if.end103
	discovered a new reachable node %if.end110
	discovered a new reachable node %if.end111
	discovered a new reachable node %if.end112
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.then99
	discovered a new reachable node %if.then93
	discovered a new reachable node %if.then86
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.then73
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.then29
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end25
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else20
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.end24
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end15
	discovered a new reachable node %if.then18
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then3
	discovered a new reachable node %if.end6
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then14
	discovered a new reachable node %if.end16
	discovered a new reachable node %if.then19
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.end32
	discovered a new reachable node %if.end33
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %if.then42
	discovered a new reachable node %if.then46
	discovered a new reachable node %if.end48
	discovered a new reachable node %if.then51
	discovered a new reachable node %if.then53
	discovered a new reachable node %if.end56
	discovered a new reachable node %if.then60
	discovered a new reachable node %if.end62
	discovered a new reachable node %if.then65
	discovered a new reachable node %if.end69
	discovered a new reachable node %if.end79
	discovered a new reachable node %if.end80
	discovered a new reachable node %if.then85
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then90
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end93
	discovered a new reachable node %if.then95
	discovered a new reachable node %if.else122
	discovered a new reachable node %if.then124
	discovered a new reachable node %if.end126
	discovered a new reachable node %if.else131
	discovered a new reachable node %if.end139
	discovered a new reachable node %if.end140
	discovered a new reachable node %if.end147
	discovered a new reachable node %if.end148
	discovered a new reachable node %if.end149
	discovered a new reachable node %if.then144
	discovered a new reachable node %if.then135
	discovered a new reachable node %if.then129
	discovered a new reachable node %if.then98
	discovered a new reachable node %if.then100
	discovered a new reachable node %if.end102
	discovered a new reachable node %land.lhs.true105
	discovered a new reachable node %if.then107
	discovered a new reachable node %if.end121
	discovered a new reachable node %if.else112
	discovered a new reachable node %if.then114
	discovered a new reachable node %if.end120
	discovered a new reachable node %if.else116
	discovered a new reachable node %if.else91
	discovered a new reachable node %if.end92
	discovered a new reachable node %if.else70
	discovered a new reachable node %if.then72
	discovered a new reachable node %if.end78
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.then8
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else19
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end23
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end12
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %while.end
	discovered a new reachable node %if.end26
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then31
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then14
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then21
	discovered a new reachable node %if.end
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then26
	discovered a new reachable node %if.end27
	discovered a new reachable node %while.cond32
	discovered a new reachable node %while.body34
	discovered a new reachable node %while.end39
	discovered a new reachable node %if.end40
	discovered a new reachable node %if.end41
	discovered a new reachable node %for.inc
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then45
	discovered a new reachable node %if.end49
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then5
	discovered a new reachable node %if.end7
	discovered a new reachable node %while.end
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then12
	discovered a new reachable node %while.cond16
	discovered a new reachable node %while.body18
	discovered a new reachable node %while.end20
	discovered a new reachable node %if.end24
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.cond7
	discovered a new reachable node %for.body11
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.inc18
	discovered a new reachable node %for.end20
	discovered a new reachable node %for.cond24
	discovered a new reachable node %for.body26
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond9
	discovered a new reachable node %for.body12
	discovered a new reachable node %for.inc26
	discovered a new reachable node %for.end27
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body9
	discovered a new reachable node %for.inc13
	discovered a new reachable node %for.end15
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %delete.end
	discovered a new reachable node %for.inc
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %for.end
	discovered a new reachable node %for.cond13
	discovered a new reachable node %for.body15
	discovered a new reachable node %delete.end20
	discovered a new reachable node %for.inc21
	discovered a new reachable node %delete.notnull19
	discovered a new reachable node %for.end23
	discovered a new reachable node %for.cond31
	discovered a new reachable node %for.body33
	discovered a new reachable node %delete.end38
	discovered a new reachable node %for.inc39
	discovered a new reachable node %delete.notnull37
	discovered a new reachable node %for.end41
	discovered a new reachable node %for.cond49
	discovered a new reachable node %for.body51
	discovered a new reachable node %delete.end56
	discovered a new reachable node %for.inc57
	discovered a new reachable node %delete.notnull55
	discovered a new reachable node %for.end59
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %delete.end
	discovered a new reachable node %delete.notnull
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %if.then
	discovered a new reachable node %cleanup
	discovered a new reachable node %cleanup34
	discovered a new reachable node %cleanup.cont
	discovered a new reachable node %for.inc
	discovered a new reachable node %if.end
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.end12
	discovered a new reachable node %land.lhs.true13
	discovered a new reachable node %if.then15
	discovered a new reachable node %if.end24
	discovered a new reachable node %if.then28
	discovered a new reachable node %if.end31
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end23
	discovered a new reachable node %if.else18
	discovered a new reachable node %if.then20
	discovered a new reachable node %if.end22
	discovered a new reachable node %if.else21
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %if.then
	discovered a new reachable node %for.cond5
	discovered a new reachable node %for.body7
	discovered a new reachable node %for.inc12
	discovered a new reachable node %for.end14
	discovered a new reachable node %if.end
	discovered a new reachable node %for.cond16
	discovered a new reachable node %for.body18
	discovered a new reachable node %for.inc19
	discovered a new reachable node %for.end21
	discovered a new reachable node %if.then23
	discovered a new reachable node %for.cond25
	discovered a new reachable node %for.body27
	discovered a new reachable node %for.inc28
	discovered a new reachable node %for.end30
	discovered a new reachable node %if.end31
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then7
	discovered a new reachable node %if.end9
	discovered a new reachable node %if.then12
	discovered a new reachable node %if.end13
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end19
	discovered a new reachable node %if.else
	discovered a new reachable node %if.then10
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else12
	discovered a new reachable node %return
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.else
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %sw.default
	discovered a new reachable node %return
	discovered a new reachable node %sw.bb
	discovered a new reachable node %sw.bb1
	discovered a new reachable node %sw.bb2
	discovered a new reachable node %sw.bb3
	discovered a new reachable node %sw.bb4
	discovered a new reachable node %sw.bb5
	discovered a new reachable node %sw.bb6
	discovered a new reachable node %sw.bb7
	discovered a new reachable node %sw.bb8
	discovered a new reachable node %sw.bb9
	discovered a new reachable node %sw.bb10
	discovered a new reachable node %sw.bb11
	discovered a new reachable node %sw.bb12
	discovered a new reachable node %sw.bb13
	discovered a new reachable node %sw.bb14
	discovered a new reachable node %sw.bb15
	discovered a new reachable node %sw.bb16
	discovered a new reachable node %sw.bb17
	discovered a new reachable node %sw.bb18
	discovered a new reachable node %sw.bb19
	discovered a new reachable node %sw.bb20
	discovered a new reachable node %sw.bb21
	discovered a new reachable node %sw.bb22
	discovered a new reachable node %sw.bb23
	discovered a new reachable node %sw.bb24
	discovered a new reachable node %sw.bb25
	discovered a new reachable node %sw.bb26
	discovered a new reachable node %sw.bb27
	discovered a new reachable node %sw.bb28
	discovered a new reachable node %sw.bb29
	discovered a new reachable node %sw.bb30
	discovered a new reachable node %sw.bb31
	discovered a new reachable node %sw.bb32
	discovered a new reachable node %sw.bb33
	discovered a new reachable node %sw.bb34
	discovered a new reachable node %sw.bb35
	discovered a new reachable node %sw.bb36
	discovered a new reachable node %sw.bb37
	discovered a new reachable node %sw.bb38
	discovered a new reachable node %sw.bb39
	discovered a new reachable node %sw.bb40
	discovered a new reachable node %sw.bb41
	discovered a new reachable node %sw.bb42
	discovered a new reachable node %sw.bb43
	discovered a new reachable node %sw.bb44
	discovered a new reachable node %sw.bb45
	discovered a new reachable node %sw.bb46
	discovered a new reachable node %sw.bb47
	discovered a new reachable node %sw.bb48
	discovered a new reachable node %sw.bb49
	discovered a new reachable node %sw.bb50
	discovered a new reachable node %sw.bb51
	discovered a new reachable node %sw.bb52
	discovered a new reachable node %sw.bb53
	discovered a new reachable node %sw.bb54
	discovered a new reachable node %sw.bb55
	discovered a new reachable node %sw.bb56
	discovered a new reachable node %sw.bb57
	discovered a new reachable node %sw.bb58
	discovered a new reachable node %sw.bb59
	discovered a new reachable node %sw.bb60
	discovered a new reachable node %sw.bb61
	discovered a new reachable node %sw.bb62
	discovered a new reachable node %sw.bb63
	discovered a new reachable node %sw.bb64
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %land.rhs
	discovered a new reachable node %land.end
	discovered a new reachable node %while.body
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then9
	discovered a new reachable node %if.end11
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %for.cond
	discovered a new reachable node %for.body
	discovered a new reachable node %for.inc
	discovered a new reachable node %for.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then
	discovered a new reachable node %while.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end33
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %return
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then9
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.else12
	discovered a new reachable node %if.then18
	discovered a new reachable node %if.then22
	discovered a new reachable node %if.else25
	discovered a new reachable node %if.then32
	discovered a new reachable node %if.then36
	discovered a new reachable node %if.else39
	discovered a new reachable node %if.else42
	discovered a new reachable node %if.else44
	discovered a new reachable node %if.then50
	discovered a new reachable node %if.then54
	discovered a new reachable node %if.else57
	discovered a new reachable node %if.then64
	discovered a new reachable node %if.then68
	discovered a new reachable node %if.else71
	discovered a new reachable node %if.else74
	discovered a new reachable node %if.else76
	discovered a new reachable node %entry
	discovered a new reachable node %lor.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %lor.rhs
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %while.cond
	discovered a new reachable node %while.body
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %while.end
	discovered a new reachable node %if.then
	discovered a new reachable node %if.then10
	discovered a new reachable node %return
	discovered a new reachable node %if.else
	discovered a new reachable node %if.end
	discovered a new reachable node %if.end12
	discovered a new reachable node %if.then17
	discovered a new reachable node %if.end18
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %cond.true
	discovered a new reachable node %cond.end
	discovered a new reachable node %lor.lhs.false
	discovered a new reachable node %cond.false
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %land.lhs.true
	discovered a new reachable node %if.then
	discovered a new reachable node %if.end
	discovered a new reachable node %if.then4
	discovered a new reachable node %if.end6
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
Successfully loaded hpvm-rt API module
Locate __hpvm__init()
Initialize Timer Set
Inserting GV: i8**@hpvmTimerSet_GenHPVM = common global i8* null
TimerSetAddress =   %2 = call i8* @llvm_hpvm_initializeTimerSet()
Store Timer Address in Global variable:   store i8* %2, i8** @hpvmTimerSet_GenHPVM
Locate __hpvm__cleanup()
-------- Searching for launch sites ----------
Function: _ZNSt8ios_base4InitC1Ev
Erase 0 Statements:
Function: _ZNSt8ios_base4InitD1Ev
Erase 0 Statements:
Function: __cxa_atexit
Erase 0 Statements:
Function: _Z11encoder_fxpPimjji
Set preferred target for _Z11encoder_fxpPimjji: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #8
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPimjji(i32* %haha, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
  ret void
}

	Num of in pointers = 1
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPimjji(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
  ret void
}

Function before hpvm return processing

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPimjji(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
  ret void
}

	Num of return values = 1
Code generation for return:
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
Found hpvm return call:   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
Found return statement of BB:   ret void
	Substitute return with:   ret %struct.out._Z11encoder_fxpPimjji %returnStruct
Function after hpvm return processing

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPimjji(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
  ret %struct.out._Z11encoder_fxpPimjji %returnStruct
}

Erase 3 Statements:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
  tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
	Erasing   tail call void (i32, ...) @__hpvm__return(i32 1, i64 %bytes_soundSrcs) #8
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 1, i32* %haha, i32 1, i32 %nSamples) #8
	Erasing   tail call void @__hpvm__hint(i32 1) #8
Function before fixing return type

; Function Attrs: nounwind uwtable
define void @_Z11encoder_fxpPimjji(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
  ret %struct.out._Z11encoder_fxpPimjji %returnStruct
}

Return type value: %struct.out._Z11encoder_fxpPimjji = type <{ i64 }>
Cloning Function: _Z11encoder_fxpPimjji
Old Function Type: void (i32*, i64, i32, i32, i32)
New Function Type: %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)
Old Function name: _Z11encoder_fxpPimjji
New Function name: _Z11encoder_fxpPimjji_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. i32* %haha : i32* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i32 %nSamples : i32 %0
3. i32 %soundSrcsSize : i32 %0
4. i32 %numBlocks : i32 %0

; Function Attrs: nounwind uwtable
define %struct.out._Z11encoder_fxpPimjji @_Z11encoder_fxpPimjji_cloned(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
  ret %struct.out._Z11encoder_fxpPimjji %returnStruct
}

Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: _Z11encoder_fxpPimjji
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__return
Function: _Z9sumBF_fxpPimS_mji
Function: _Z15encoderPipelinePimjjiS_m
Fixing use:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji) #8
in function: _Z15encoderPipelinePimjjiS_m
Fixed use:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
Function: llvm.lifetime.start.p0i8
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: llvm.lifetime.end.p0i8
Function: _Z13encodeProcessv
Function: __hpvm__init
Function: malloc
Function: llvm_hpvm_track_mem
Function: __hpvm__launch
Function: __hpvm__wait
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__cleanup
Function: main
Function: _GLOBAL__sub_I_main.cpp
Function: puts
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: _Z11encoder_fxpPimjji_cloned
Associated Metadata: <0x799fbc8> = !{void (i32*, i64, i32, i32, i32)* @_Z11encoder_fxpPimjji}
New Metadata: <0x799f5f8> = !{%struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* @_Z11encoder_fxpPimjji_cloned}
DONE: Replacing function _Z11encoder_fxpPimjji with _Z11encoder_fxpPimjji_cloned
Function after fixing return type

; Function Attrs: nounwind uwtable
define %struct.out._Z11encoder_fxpPimjji @_Z11encoder_fxpPimjji_cloned(i32* in %haha, i64 %bytes_soundSrcs, i32 out %nSamples, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  %returnStruct = insertvalue %struct.out._Z11encoder_fxpPimjji undef, i64 %bytes_soundSrcs, 0
  ret %struct.out._Z11encoder_fxpPimjji %returnStruct
}

Function: __hpvm__hint
Erase 0 Statements:
Function: __hpvm__attributes
Erase 0 Statements:
Function: __hpvm__return
Erase 0 Statements:
Function: _Z9sumBF_fxpPimS_mji
Set preferred target for _Z9sumBF_fxpPimS_mji: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #8
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z9sumBF_fxpPimS_mji(i32* %haha, i64 %bytes_soundSrcs, i32* %hehe, i64 %bytes_sumBF, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 1, i32* %hehe) #8
  ret void
}

	Num of in pointers = 2
	Num of out Pointers = 1
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z9sumBF_fxpPimS_mji(i32* in %haha, i64 %bytes_soundSrcs, i32* in out %hehe, i64 %bytes_sumBF, i32 %soundSrcsSize, i32 %numBlocks) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 1, i32* %hehe) #8
  ret void
}

Erase 2 Statements:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 1, i32* %hehe) #8
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 1, i32* %hehe) #8
	Erasing   tail call void @__hpvm__hint(i32 1) #8
Function: _Z15encoderPipelinePimjjiS_m
Set preferred target for _Z15encoderPipelinePimjjiS_m: CPU Target
Found hpvm hint call:   tail call void @__hpvm__hint(i32 1) #8
Kernel before adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z15encoderPipelinePimjjiS_m(i32* %haha, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks, i32* %hehe, i64 %bytes_sumBF) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 2, i32* %haha, i32* %hehe) #8
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 0, i32 0, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 1, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 2, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 3, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 4, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 0, i32 0, i32 0) #8
  %call2 = tail call i8* @__hpvm__edge(i8* %call, i8* %call1, i32 1, i32 0, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 5, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 6, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 3, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 4, i32 5, i32 0) #8
  ret void
}

	Num of in pointers = 2
	Num of out Pointers = 2
Kernel after adding In/Out HPVM attributes:

; Function Attrs: nounwind uwtable
define void @_Z15encoderPipelinePimjjiS_m(i32* in out %haha, i64 %bytes_soundSrcs, i32 %nSamples, i32 %soundSrcsSize, i32 %numBlocks, i32* in out %hehe, i64 %bytes_sumBF) #3 {
entry:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 2, i32* %haha, i32* %hehe) #8
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 0, i32 0, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 1, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 2, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 3, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call, i32 4, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 0, i32 0, i32 0) #8
  %call2 = tail call i8* @__hpvm__edge(i8* %call, i8* %call1, i32 1, i32 0, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 5, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 6, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 3, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %call1, i32 4, i32 5, i32 0) #8
  ret void
}


; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #8

  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
in _Z15encoderPipelinePimjjiS_m
Transforming return type of function to Struct: _Z11encoder_fxpPimjji_cloned
Return type is already a Struct: _Z11encoder_fxpPimjji_cloned: %struct.out._Z11encoder_fxpPimjji = type <{ i64 }>
Found hpvm createNode call:   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
	Substitute with:   %_Z11encoder_fxpPimjji_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* @_Z11encoder_fxpPimjji_cloned to i8*))

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #8

  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji) #8
in _Z15encoderPipelinePimjjiS_m
Transforming return type of function to Struct: _Z9sumBF_fxpPimS_mji
Cloning Function: _Z9sumBF_fxpPimS_mji
Old Function Type: void (i32*, i64, i32*, i64, i32, i32)
New Function Type: %emptyStruct (i32*, i64, i32*, i64, i32, i32)
Old Function name: _Z9sumBF_fxpPimS_mji
New Function name: _Z9sumBF_fxpPimS_mji_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. i32* %haha : i32* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i32* %hehe : i32* %0
3. i64 %bytes_sumBF : i64 %0
4. i32 %soundSrcsSize : i32 %0
5. i32 %numBlocks : i32 %0
Found return inst:   ret void
Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__return
Function: _Z9sumBF_fxpPimS_mji
Function: _Z15encoderPipelinePimjjiS_m
Fixing use:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, void (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji) #8
in function: _Z15encoderPipelinePimjjiS_m
Fixed use:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %emptyStruct (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji_cloned) #8
Function: llvm.lifetime.start.p0i8
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: llvm.lifetime.end.p0i8
Function: _Z13encodeProcessv
Function: __hpvm__init
Function: malloc
Function: llvm_hpvm_track_mem
Function: __hpvm__launch
Function: __hpvm__wait
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__cleanup
Function: main
Function: _GLOBAL__sub_I_main.cpp
Function: puts
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: _Z11encoder_fxpPimjji_cloned
Function: llvm.hpvm.createNode
Function: _Z9sumBF_fxpPimS_mji_cloned
Associated Metadata: <0x799fac8> = !{void (i32*, i64, i32*, i64, i32, i32)* @_Z9sumBF_fxpPimS_mji}
New Metadata: <0x79a0378> = !{%emptyStruct (i32*, i64, i32*, i64, i32, i32)* @_Z9sumBF_fxpPimS_mji_cloned}
DONE: Replacing function _Z9sumBF_fxpPimS_mji with _Z9sumBF_fxpPimS_mji_cloned
Found hpvm createNode call:   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %emptyStruct (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji_cloned) #8
	Substitute with:   %_Z9sumBF_fxpPimS_mji_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%emptyStruct (i32*, i64, i32*, i64, i32, i32)* @_Z9sumBF_fxpPimS_mji_cloned to i8*))

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 0, i32 0, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 0, i32 0, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 1, i32 1, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 1, i32 1, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 2, i32 2, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 2, i32 2, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 3, i32 3, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 3, i32 3, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 4, i32 4, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 4, i32 4, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 0, i32 0, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 0, i32 0, i1 false)

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #8

Found hpvm edge call:   %call2 = tail call i8* @__hpvm__edge(i8* %_Z11encoder_fxpPimjji_cloned.node, i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 1, i32 0, i32 1, i32 0) #8
	Substitute with:   %output = call i8* @llvm.hpvm.createEdge(i8* %_Z11encoder_fxpPimjji_cloned.node, i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i1 true, i32 0, i32 1, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 5, i32 2, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 5, i32 2, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 6, i32 3, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 6, i32 3, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 3, i32 4, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 3, i32 4, i1 false)

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #8

Found hpvm bindIn call:   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 4, i32 5, i32 0) #8
	Substitute with:   call void @llvm.hpvm.bind.input(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 4, i32 5, i1 false)
Erase 15 Statements:
  tail call void @__hpvm__hint(i32 1) #8
  tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 2, i32* %haha, i32* %hehe) #8
  %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
  %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %emptyStruct (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji_cloned) #8
  tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 0, i32 0, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 1, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 2, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 3, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 4, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 0, i32 0, i32 0) #8
  %call2 = tail call i8* @__hpvm__edge(i8* %_Z11encoder_fxpPimjji_cloned.node, i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 1, i32 0, i32 1, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 5, i32 2, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 6, i32 3, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 3, i32 4, i32 0) #8
  tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 4, i32 5, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 4, i32 5, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 3, i32 4, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 6, i32 3, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 5, i32 2, i32 0) #8
	Erasing   %call2 = tail call i8* @__hpvm__edge(i8* %_Z11encoder_fxpPimjji_cloned.node, i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 1, i32 0, i32 1, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z9sumBF_fxpPimS_mji_cloned.node, i32 0, i32 0, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 4, i32 4, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 3, i32 3, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 2, i32 2, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 1, i32 1, i32 0) #8
	Erasing   tail call void @__hpvm__bindIn(i8* %_Z11encoder_fxpPimjji_cloned.node, i32 0, i32 0, i32 0) #8
	Erasing   %call1 = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %emptyStruct (i32*, i64, i32*, i64, i32, i32)* nonnull @_Z9sumBF_fxpPimS_mji_cloned) #8
	Erasing   %call = tail call i8* (i32, ...) @__hpvm__createNodeND(i32 0, %struct.out._Z11encoder_fxpPimjji (i32*, i64, i32, i32, i32)* nonnull @_Z11encoder_fxpPimjji_cloned) #8
	Erasing   tail call void (i32, ...) @__hpvm__attributes(i32 2, i32* %haha, i32* %hehe, i32 2, i32* %haha, i32* %hehe) #8
	Erasing   tail call void @__hpvm__hint(i32 1) #8
Function: llvm.lifetime.start.p0i8
Erase 0 Statements:
Function: __hpvm__createNodeND
Erase 0 Statements:
Function: __hpvm__bindIn
Erase 0 Statements:
Function: __hpvm__edge
Erase 0 Statements:
Function: llvm.lifetime.end.p0i8
Erase 0 Statements:
Function: _Z13encodeProcessv
Found call:   tail call void @__hpvm__init() #8

; Function Attrs: nounwind
declare void @llvm.hpvm.init() #8

	Substitute with:   call void @llvm.hpvm.init()

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #8

Transforming return type of function to Struct: _Z15encoderPipelinePimjjiS_m
Cloning Function: _Z15encoderPipelinePimjjiS_m
Old Function Type: void (i32*, i64, i32, i32, i32, i32*, i64)
New Function Type: %emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)
Old Function name: _Z15encoderPipelinePimjjiS_m
New Function name: _Z15encoderPipelinePimjjiS_m_cloned
No value map provided. Creating default value map
Case 2: Extra arguments are added at the end of old function
0. i32* %haha : i32* %0
1. i64 %bytes_soundSrcs : i64 %0
2. i32 %nSamples : i32 %0
3. i32 %soundSrcsSize : i32 %0
4. i32 %numBlocks : i32 %0
5. i32* %hehe : i32* %0
6. i64 %bytes_sumBF : i64 %0
Found return inst:   ret void
Function: _ZNSt8ios_base4InitC1Ev
Function: _ZNSt8ios_base4InitD1Ev
Function: __cxa_atexit
Function: __hpvm__hint
Function: __hpvm__attributes
Function: __hpvm__return
Function: _Z15encoderPipelinePimjjiS_m
Function: llvm.lifetime.start.p0i8
Function: __hpvm__createNodeND
Function: __hpvm__bindIn
Function: __hpvm__edge
Function: llvm.lifetime.end.p0i8
Function: _Z13encodeProcessv
%emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)*
void (i32*, i64, i32, i32, i32, i32*, i64)*
Function: __hpvm__init
Function: malloc
Function: llvm_hpvm_track_mem
Function: __hpvm__launch
Function: __hpvm__wait
Function: llvm_hpvm_request_mem
Function: llvm_hpvm_untrack_mem
Function: __hpvm__cleanup
Function: main
Function: _GLOBAL__sub_I_main.cpp
Function: puts
Function: llvm_hpvm_initializeTimerSet
Function: llvm_hpvm_switchToTimer
Function: llvm_hpvm_printTimerSet
Function: _Z11encoder_fxpPimjji_cloned
Function: llvm.hpvm.createNode
Function: _Z9sumBF_fxpPimS_mji_cloned
Function: llvm.hpvm.bind.input
Function: llvm.hpvm.createEdge
Function: llvm.hpvm.init
Function: llvm.hpvm.launch
Function: _Z15encoderPipelinePimjjiS_m_cloned
Associated Metadata: <0x796ed08> = !{void (i32*, i64, i32, i32, i32, i32*, i64)* @_Z15encoderPipelinePimjjiS_m}
New Metadata: <0x799f0a8> = !{%emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)* @_Z15encoderPipelinePimjjiS_m_cloned}
DONE: Replacing function _Z15encoderPipelinePimjjiS_m with _Z15encoderPipelinePimjjiS_m_cloned
Found hpvm launch call:   %call12 = call i8* (i32, ...) @__hpvm__launch(i32 0, %emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)* nonnull @_Z15encoderPipelinePimjjiS_m_cloned, i8* %call) #8
	Substitute with:   %graphID = call i8* @llvm.hpvm.launch(i8* bitcast (%emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)* @_Z15encoderPipelinePimjjiS_m_cloned to i8*), i8* %call, i1 false)
Found call:   call void @__hpvm__wait(i8* %graphID) #8

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #8

	Substitute with:   call void @llvm.hpvm.wait(i8* %graphID)
Found call:   call void @__hpvm__cleanup() #8

; Function Attrs: nounwind
declare void @llvm.hpvm.cleanup() #8

	Substitute with:   call void @llvm.hpvm.cleanup()
Erase 4 Statements:
  tail call void @__hpvm__init() #8
  %call12 = call i8* (i32, ...) @__hpvm__launch(i32 0, %emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)* nonnull @_Z15encoderPipelinePimjjiS_m_cloned, i8* %call) #8
  call void @__hpvm__wait(i8* %graphID) #8
  call void @__hpvm__cleanup() #8
	Erasing   call void @__hpvm__cleanup() #8
	Erasing   call void @__hpvm__wait(i8* %graphID) #8
	Erasing   %call12 = call i8* (i32, ...) @__hpvm__launch(i32 0, %emptyStruct.1 (i32*, i64, i32, i32, i32, i32*, i64)* nonnull @_Z15encoderPipelinePimjjiS_m_cloned, i8* %call) #8
	Erasing   tail call void @__hpvm__init() #8
Function: __hpvm__init
Erase 0 Statements:
Function: malloc
Erase 0 Statements:
Function: llvm_hpvm_track_mem
Erase 0 Statements:
Function: __hpvm__launch
Erase 0 Statements:
Function: __hpvm__wait
Erase 0 Statements:
Function: llvm_hpvm_request_mem
Erase 0 Statements:
Function: llvm_hpvm_untrack_mem
Erase 0 Statements:
Function: __hpvm__cleanup
Erase 0 Statements:
Function: main
Erase 0 Statements:
Function: _GLOBAL__sub_I_main.cpp
Erase 0 Statements:
Function: puts
Erase 0 Statements:
Function: llvm_hpvm_initializeTimerSet
Erase 0 Statements:
Function: llvm_hpvm_switchToTimer
Erase 0 Statements:
Function: llvm_hpvm_printTimerSet
Erase 0 Statements:
Optimizing Global Constructor: 
; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #7 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
	discovered a new reachable node %entry
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/opt -load LLVMBuildDFG.so -load LLVMDFG2LLVM_CPU.so -load LLVMClearDFG.so -dfg2llvm-cpu -clearDFG -hpvm-timers-cpu -S build/seq/main.hpvm.ll -o build/seq/audioEncoding-seq.host.ll
Writing '/tmp/DataflowGraph-1b89f7.dot'...  done. 
/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/bin/llvm-link build/seq/audioEncoding-seq.host.ll /shared/workspace/yingj4/HPVM/hpvm-release/hpvm/build/tools/hpvm/projects/hpvm-rt/hpvm-rt.bc -S -o build/seq/audioEncoding-seq.linked.ll
make: *** No rule to make target 'lispatialaudio/build/Debug/lib/libspatialaudio.a', needed by 'audioEncoding-seq'.  Stop.
[01;32myingj4@acadia[00m:[01;34m/shared/workspace/yingj4/HPVM/hpvm-release/hpvm/test/benchmarks/apForFun[00m$ exit
exit

Script done on Wed 08 Jul 2020 01:25:18 PM CDT
